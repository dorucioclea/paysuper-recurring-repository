// Code generated by protoc-gen-go. DO NOT EDIT.
// source: project.proto

package project

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AccountingPeriod int32

const (
	AccountingPeriod_day       AccountingPeriod = 0
	AccountingPeriod_week      AccountingPeriod = 1
	AccountingPeriod_two_week  AccountingPeriod = 2
	AccountingPeriod_month     AccountingPeriod = 3
	AccountingPeriod_quarter   AccountingPeriod = 4
	AccountingPeriod_half_year AccountingPeriod = 5
	AccountingPeriod_year      AccountingPeriod = 6
)

var AccountingPeriod_name = map[int32]string{
	0: "day",
	1: "week",
	2: "two_week",
	3: "month",
	4: "quarter",
	5: "half_year",
	6: "year",
}
var AccountingPeriod_value = map[string]int32{
	"day":       0,
	"week":      1,
	"two_week":  2,
	"month":     3,
	"quarter":   4,
	"half_year": 5,
	"year":      6,
}

func (x AccountingPeriod) String() string {
	return proto.EnumName(AccountingPeriod_name, int32(x))
}
func (AccountingPeriod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_project_3b0be7b1910c46b3, []int{0}
}

type Merchant struct {
	Id                        string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExternalId                string               `protobuf:"bytes,2,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Email                     string               `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Name                      string               `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Country                   *Country             `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`
	AccountingPeriod          AccountingPeriod     `protobuf:"varint,6,opt,name=accounting_period,json=accountingPeriod,proto3,enum=AccountingPeriod" json:"accounting_period,omitempty"`
	Currency                  *Currency            `protobuf:"bytes,7,opt,name=currency,proto3" json:"currency,omitempty"`
	IsVatEnabled              bool                 `protobuf:"varint,8,opt,name=is_vat_enabled,json=isVatEnabled,proto3" json:"is_vat_enabled,omitempty"`
	IsCommissionToUserEnabled bool                 `protobuf:"varint,9,opt,name=is_commission_to_user_enabled,json=isCommissionToUserEnabled,proto3" json:"is_commission_to_user_enabled,omitempty"`
	Status                    int32                `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt                 *timestamp.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt                 *timestamp.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}             `json:"-"`
	XXX_unrecognized          []byte               `json:"-"`
	XXX_sizecache             int32                `json:"-"`
}

func (m *Merchant) Reset()         { *m = Merchant{} }
func (m *Merchant) String() string { return proto.CompactTextString(m) }
func (*Merchant) ProtoMessage()    {}
func (*Merchant) Descriptor() ([]byte, []int) {
	return fileDescriptor_project_3b0be7b1910c46b3, []int{0}
}
func (m *Merchant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Merchant.Unmarshal(m, b)
}
func (m *Merchant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Merchant.Marshal(b, m, deterministic)
}
func (dst *Merchant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Merchant.Merge(dst, src)
}
func (m *Merchant) XXX_Size() int {
	return xxx_messageInfo_Merchant.Size(m)
}
func (m *Merchant) XXX_DiscardUnknown() {
	xxx_messageInfo_Merchant.DiscardUnknown(m)
}

var xxx_messageInfo_Merchant proto.InternalMessageInfo

func (m *Merchant) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Merchant) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *Merchant) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Merchant) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Merchant) GetCountry() *Country {
	if m != nil {
		return m.Country
	}
	return nil
}

func (m *Merchant) GetAccountingPeriod() AccountingPeriod {
	if m != nil {
		return m.AccountingPeriod
	}
	return AccountingPeriod_day
}

func (m *Merchant) GetCurrency() *Currency {
	if m != nil {
		return m.Currency
	}
	return nil
}

func (m *Merchant) GetIsVatEnabled() bool {
	if m != nil {
		return m.IsVatEnabled
	}
	return false
}

func (m *Merchant) GetIsCommissionToUserEnabled() bool {
	if m != nil {
		return m.IsCommissionToUserEnabled
	}
	return false
}

func (m *Merchant) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Merchant) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Merchant) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type FixedPackage struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CurrencyInt          int32                `protobuf:"varint,3,opt,name=currency_int,json=currencyInt,proto3" json:"currency_int,omitempty"`
	Price                float64              `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	IsActive             bool                 `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Currency             *Currency            `protobuf:"bytes,8,opt,name=currency,proto3" json:"currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FixedPackage) Reset()         { *m = FixedPackage{} }
func (m *FixedPackage) String() string { return proto.CompactTextString(m) }
func (*FixedPackage) ProtoMessage()    {}
func (*FixedPackage) Descriptor() ([]byte, []int) {
	return fileDescriptor_project_3b0be7b1910c46b3, []int{1}
}
func (m *FixedPackage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FixedPackage.Unmarshal(m, b)
}
func (m *FixedPackage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FixedPackage.Marshal(b, m, deterministic)
}
func (dst *FixedPackage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FixedPackage.Merge(dst, src)
}
func (m *FixedPackage) XXX_Size() int {
	return xxx_messageInfo_FixedPackage.Size(m)
}
func (m *FixedPackage) XXX_DiscardUnknown() {
	xxx_messageInfo_FixedPackage.DiscardUnknown(m)
}

var xxx_messageInfo_FixedPackage proto.InternalMessageInfo

func (m *FixedPackage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FixedPackage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FixedPackage) GetCurrencyInt() int32 {
	if m != nil {
		return m.CurrencyInt
	}
	return 0
}

func (m *FixedPackage) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *FixedPackage) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *FixedPackage) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *FixedPackage) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *FixedPackage) GetCurrency() *Currency {
	if m != nil {
		return m.Currency
	}
	return nil
}

type FixedPackages struct {
	FixedPackage         []*FixedPackage `protobuf:"bytes,1,rep,name=fixed_package,json=fixedPackage,proto3" json:"fixed_package,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *FixedPackages) Reset()         { *m = FixedPackages{} }
func (m *FixedPackages) String() string { return proto.CompactTextString(m) }
func (*FixedPackages) ProtoMessage()    {}
func (*FixedPackages) Descriptor() ([]byte, []int) {
	return fileDescriptor_project_3b0be7b1910c46b3, []int{2}
}
func (m *FixedPackages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FixedPackages.Unmarshal(m, b)
}
func (m *FixedPackages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FixedPackages.Marshal(b, m, deterministic)
}
func (dst *FixedPackages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FixedPackages.Merge(dst, src)
}
func (m *FixedPackages) XXX_Size() int {
	return xxx_messageInfo_FixedPackages.Size(m)
}
func (m *FixedPackages) XXX_DiscardUnknown() {
	xxx_messageInfo_FixedPackages.DiscardUnknown(m)
}

var xxx_messageInfo_FixedPackages proto.InternalMessageInfo

func (m *FixedPackages) GetFixedPackage() []*FixedPackage {
	if m != nil {
		return m.FixedPackage
	}
	return nil
}

type ProjectPaymentMethod struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AddedAAt             *timestamp.Timestamp `protobuf:"bytes,2,opt,name=added_aAt,json=addedAAt,proto3" json:"added_aAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ProjectPaymentMethod) Reset()         { *m = ProjectPaymentMethod{} }
func (m *ProjectPaymentMethod) String() string { return proto.CompactTextString(m) }
func (*ProjectPaymentMethod) ProtoMessage()    {}
func (*ProjectPaymentMethod) Descriptor() ([]byte, []int) {
	return fileDescriptor_project_3b0be7b1910c46b3, []int{3}
}
func (m *ProjectPaymentMethod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectPaymentMethod.Unmarshal(m, b)
}
func (m *ProjectPaymentMethod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectPaymentMethod.Marshal(b, m, deterministic)
}
func (dst *ProjectPaymentMethod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectPaymentMethod.Merge(dst, src)
}
func (m *ProjectPaymentMethod) XXX_Size() int {
	return xxx_messageInfo_ProjectPaymentMethod.Size(m)
}
func (m *ProjectPaymentMethod) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectPaymentMethod.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectPaymentMethod proto.InternalMessageInfo

func (m *ProjectPaymentMethod) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProjectPaymentMethod) GetAddedAAt() *timestamp.Timestamp {
	if m != nil {
		return m.AddedAAt
	}
	return nil
}

type ProjectPaymentMethods struct {
	PaymentMethods       []*ProjectPaymentMethod `protobuf:"bytes,1,rep,name=payment_methods,json=paymentMethods,proto3" json:"payment_methods,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ProjectPaymentMethods) Reset()         { *m = ProjectPaymentMethods{} }
func (m *ProjectPaymentMethods) String() string { return proto.CompactTextString(m) }
func (*ProjectPaymentMethods) ProtoMessage()    {}
func (*ProjectPaymentMethods) Descriptor() ([]byte, []int) {
	return fileDescriptor_project_3b0be7b1910c46b3, []int{4}
}
func (m *ProjectPaymentMethods) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectPaymentMethods.Unmarshal(m, b)
}
func (m *ProjectPaymentMethods) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectPaymentMethods.Marshal(b, m, deterministic)
}
func (dst *ProjectPaymentMethods) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectPaymentMethods.Merge(dst, src)
}
func (m *ProjectPaymentMethods) XXX_Size() int {
	return xxx_messageInfo_ProjectPaymentMethods.Size(m)
}
func (m *ProjectPaymentMethods) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectPaymentMethods.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectPaymentMethods proto.InternalMessageInfo

func (m *ProjectPaymentMethods) GetPaymentMethods() []*ProjectPaymentMethod {
	if m != nil {
		return m.PaymentMethods
	}
	return nil
}

type Project struct {
	Id                         string                            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CallbackCurrency           *Currency                         `protobuf:"bytes,2,opt,name=callback_currency,json=callbackCurrency,proto3" json:"callback_currency,omitempty"`
	CallbackProtocol           string                            `protobuf:"bytes,3,opt,name=callback_protocol,json=callbackProtocol,proto3" json:"callback_protocol,omitempty"`
	CreateInvoiceAllowedUrls   []string                          `protobuf:"bytes,4,rep,name=create_invoice_allowed_urls,json=createInvoiceAllowedUrls,proto3" json:"create_invoice_allowed_urls,omitempty"`
	Merchant                   *Merchant                         `protobuf:"bytes,5,opt,name=merchant,proto3" json:"merchant,omitempty"`
	IsAllowDynamicNotifyUrls   bool                              `protobuf:"varint,6,opt,name=is_allow_dynamic_notify_urls,json=isAllowDynamicNotifyUrls,proto3" json:"is_allow_dynamic_notify_urls,omitempty"`
	IsAllowDynamicRedirectUrls bool                              `protobuf:"varint,7,opt,name=is_allow_dynamic_redirect_urls,json=isAllowDynamicRedirectUrls,proto3" json:"is_allow_dynamic_redirect_urls,omitempty"`
	LimitsCurrency             *Currency                         `protobuf:"bytes,8,opt,name=limits_currency,json=limitsCurrency,proto3" json:"limits_currency,omitempty"`
	MaxPaymentAmount           float64                           `protobuf:"fixed64,9,opt,name=MaxPaymentAmount,proto3" json:"MaxPaymentAmount,omitempty"`
	MinPaymentAmount           float64                           `protobuf:"fixed64,10,opt,name=MinPaymentAmount,proto3" json:"MinPaymentAmount,omitempty"`
	Name                       string                            `protobuf:"bytes,11,opt,name=Name,proto3" json:"Name,omitempty"`
	NotifyEmails               []string                          `protobuf:"bytes,12,rep,name=NotifyEmails,proto3" json:"NotifyEmails,omitempty"`
	OnlyFixedAmounts           bool                              `protobuf:"varint,13,opt,name=OnlyFixedAmounts,proto3" json:"OnlyFixedAmounts,omitempty"`
	SecretKey                  string                            `protobuf:"bytes,14,opt,name=SecretKey,proto3" json:"SecretKey,omitempty"`
	SendNotifyEmail            bool                              `protobuf:"varint,15,opt,name=SendNotifyEmail,proto3" json:"SendNotifyEmail,omitempty"`
	URLCheckAccount            string                            `protobuf:"bytes,16,opt,name=URLCheckAccount,proto3" json:"URLCheckAccount,omitempty"`
	URLProcessPayment          string                            `protobuf:"bytes,17,opt,name=URLProcessPayment,proto3" json:"URLProcessPayment,omitempty"`
	URLRedirectFail            string                            `protobuf:"bytes,18,opt,name=URLRedirectFail,proto3" json:"URLRedirectFail,omitempty"`
	URLRedirectSuccess         string                            `protobuf:"bytes,19,opt,name=URLRedirectSuccess,proto3" json:"URLRedirectSuccess,omitempty"`
	FixedPackage               map[string]*FixedPackages         `protobuf:"bytes,23,rep,name=fixed_package,json=fixedPackage,proto3" json:"fixed_package,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PaymentMethods             map[string]*ProjectPaymentMethods `protobuf:"bytes,24,rep,name=payment_methods,json=paymentMethods,proto3" json:"payment_methods,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IsActive                   bool                              `protobuf:"varint,20,opt,name=IsActive,proto3" json:"IsActive,omitempty"`
	CreatedAt                  *timestamp.Timestamp              `protobuf:"bytes,21,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt                  *timestamp.Timestamp              `protobuf:"bytes,22,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                          `json:"-"`
	XXX_unrecognized           []byte                            `json:"-"`
	XXX_sizecache              int32                             `json:"-"`
}

func (m *Project) Reset()         { *m = Project{} }
func (m *Project) String() string { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()    {}
func (*Project) Descriptor() ([]byte, []int) {
	return fileDescriptor_project_3b0be7b1910c46b3, []int{5}
}
func (m *Project) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Project.Unmarshal(m, b)
}
func (m *Project) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Project.Marshal(b, m, deterministic)
}
func (dst *Project) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Project.Merge(dst, src)
}
func (m *Project) XXX_Size() int {
	return xxx_messageInfo_Project.Size(m)
}
func (m *Project) XXX_DiscardUnknown() {
	xxx_messageInfo_Project.DiscardUnknown(m)
}

var xxx_messageInfo_Project proto.InternalMessageInfo

func (m *Project) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Project) GetCallbackCurrency() *Currency {
	if m != nil {
		return m.CallbackCurrency
	}
	return nil
}

func (m *Project) GetCallbackProtocol() string {
	if m != nil {
		return m.CallbackProtocol
	}
	return ""
}

func (m *Project) GetCreateInvoiceAllowedUrls() []string {
	if m != nil {
		return m.CreateInvoiceAllowedUrls
	}
	return nil
}

func (m *Project) GetMerchant() *Merchant {
	if m != nil {
		return m.Merchant
	}
	return nil
}

func (m *Project) GetIsAllowDynamicNotifyUrls() bool {
	if m != nil {
		return m.IsAllowDynamicNotifyUrls
	}
	return false
}

func (m *Project) GetIsAllowDynamicRedirectUrls() bool {
	if m != nil {
		return m.IsAllowDynamicRedirectUrls
	}
	return false
}

func (m *Project) GetLimitsCurrency() *Currency {
	if m != nil {
		return m.LimitsCurrency
	}
	return nil
}

func (m *Project) GetMaxPaymentAmount() float64 {
	if m != nil {
		return m.MaxPaymentAmount
	}
	return 0
}

func (m *Project) GetMinPaymentAmount() float64 {
	if m != nil {
		return m.MinPaymentAmount
	}
	return 0
}

func (m *Project) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Project) GetNotifyEmails() []string {
	if m != nil {
		return m.NotifyEmails
	}
	return nil
}

func (m *Project) GetOnlyFixedAmounts() bool {
	if m != nil {
		return m.OnlyFixedAmounts
	}
	return false
}

func (m *Project) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

func (m *Project) GetSendNotifyEmail() bool {
	if m != nil {
		return m.SendNotifyEmail
	}
	return false
}

func (m *Project) GetURLCheckAccount() string {
	if m != nil {
		return m.URLCheckAccount
	}
	return ""
}

func (m *Project) GetURLProcessPayment() string {
	if m != nil {
		return m.URLProcessPayment
	}
	return ""
}

func (m *Project) GetURLRedirectFail() string {
	if m != nil {
		return m.URLRedirectFail
	}
	return ""
}

func (m *Project) GetURLRedirectSuccess() string {
	if m != nil {
		return m.URLRedirectSuccess
	}
	return ""
}

func (m *Project) GetFixedPackage() map[string]*FixedPackages {
	if m != nil {
		return m.FixedPackage
	}
	return nil
}

func (m *Project) GetPaymentMethods() map[string]*ProjectPaymentMethods {
	if m != nil {
		return m.PaymentMethods
	}
	return nil
}

func (m *Project) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *Project) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Project) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type ProjectOrder struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	UrlSuccess           string    `protobuf:"bytes,3,opt,name=url_success,json=urlSuccess,proto3" json:"url_success,omitempty"`
	UrlFail              string    `protobuf:"bytes,4,opt,name=url_fail,json=urlFail,proto3" json:"url_fail,omitempty"`
	NotifyEmails         []string  `protobuf:"bytes,5,rep,name=notify_emails,json=notifyEmails,proto3" json:"notify_emails,omitempty"`
	SecretKey            string    `protobuf:"bytes,6,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
	SendNotifyEmail      bool      `protobuf:"varint,7,opt,name=send_notify_email,json=sendNotifyEmail,proto3" json:"send_notify_email,omitempty"`
	UrlCheckAccount      string    `protobuf:"bytes,8,opt,name=url_check_account,json=urlCheckAccount,proto3" json:"url_check_account,omitempty"`
	UrlProcessPayment    string    `protobuf:"bytes,9,opt,name=url_process_payment,json=urlProcessPayment,proto3" json:"url_process_payment,omitempty"`
	Merchant             *Merchant `protobuf:"bytes,10,opt,name=merchant,proto3" json:"merchant,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ProjectOrder) Reset()         { *m = ProjectOrder{} }
func (m *ProjectOrder) String() string { return proto.CompactTextString(m) }
func (*ProjectOrder) ProtoMessage()    {}
func (*ProjectOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_project_3b0be7b1910c46b3, []int{6}
}
func (m *ProjectOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectOrder.Unmarshal(m, b)
}
func (m *ProjectOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectOrder.Marshal(b, m, deterministic)
}
func (dst *ProjectOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectOrder.Merge(dst, src)
}
func (m *ProjectOrder) XXX_Size() int {
	return xxx_messageInfo_ProjectOrder.Size(m)
}
func (m *ProjectOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectOrder.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectOrder proto.InternalMessageInfo

func (m *ProjectOrder) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProjectOrder) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProjectOrder) GetUrlSuccess() string {
	if m != nil {
		return m.UrlSuccess
	}
	return ""
}

func (m *ProjectOrder) GetUrlFail() string {
	if m != nil {
		return m.UrlFail
	}
	return ""
}

func (m *ProjectOrder) GetNotifyEmails() []string {
	if m != nil {
		return m.NotifyEmails
	}
	return nil
}

func (m *ProjectOrder) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

func (m *ProjectOrder) GetSendNotifyEmail() bool {
	if m != nil {
		return m.SendNotifyEmail
	}
	return false
}

func (m *ProjectOrder) GetUrlCheckAccount() string {
	if m != nil {
		return m.UrlCheckAccount
	}
	return ""
}

func (m *ProjectOrder) GetUrlProcessPayment() string {
	if m != nil {
		return m.UrlProcessPayment
	}
	return ""
}

func (m *ProjectOrder) GetMerchant() *Merchant {
	if m != nil {
		return m.Merchant
	}
	return nil
}

func init() {
	proto.RegisterType((*Merchant)(nil), "Merchant")
	proto.RegisterType((*FixedPackage)(nil), "FixedPackage")
	proto.RegisterType((*FixedPackages)(nil), "FixedPackages")
	proto.RegisterType((*ProjectPaymentMethod)(nil), "ProjectPaymentMethod")
	proto.RegisterType((*ProjectPaymentMethods)(nil), "ProjectPaymentMethods")
	proto.RegisterType((*Project)(nil), "Project")
	proto.RegisterMapType((map[string]*FixedPackages)(nil), "Project.FixedPackageEntry")
	proto.RegisterMapType((map[string]*ProjectPaymentMethods)(nil), "Project.PaymentMethodsEntry")
	proto.RegisterType((*ProjectOrder)(nil), "ProjectOrder")
	proto.RegisterEnum("AccountingPeriod", AccountingPeriod_name, AccountingPeriod_value)
}

func init() { proto.RegisterFile("project.proto", fileDescriptor_project_3b0be7b1910c46b3) }

var fileDescriptor_project_3b0be7b1910c46b3 = []byte{
	// 1171 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xd9, 0x6e, 0xdb, 0x46,
	0x1b, 0xfd, 0x25, 0x59, 0x12, 0xf9, 0x69, 0x31, 0x35, 0x59, 0x7e, 0x46, 0x49, 0x1a, 0x55, 0x4d,
	0x01, 0xc1, 0x0d, 0x18, 0xc0, 0x05, 0xba, 0x01, 0x4d, 0xab, 0xba, 0x0e, 0x60, 0x34, 0x8b, 0xc0,
	0xc4, 0x2d, 0x7a, 0x35, 0x18, 0x93, 0x23, 0x7b, 0x6a, 0x2e, 0xea, 0xcc, 0xd0, 0x89, 0xde, 0xa4,
	0x2f, 0xd0, 0x07, 0xeb, 0x4d, 0x9f, 0xa3, 0x98, 0x85, 0x2a, 0xb5, 0xb8, 0x6d, 0x72, 0xc7, 0x39,
	0x73, 0xbe, 0x33, 0x9c, 0x6f, 0x39, 0x24, 0xf4, 0x16, 0x3c, 0xff, 0x85, 0x46, 0x32, 0x58, 0xf0,
	0x5c, 0xe6, 0x43, 0x2f, 0x66, 0x91, 0x64, 0x79, 0x46, 0xf8, 0xd2, 0x22, 0x0f, 0xce, 0xf3, 0xfc,
	0x3c, 0xa1, 0x8f, 0xf5, 0xea, 0xac, 0x98, 0x3f, 0x96, 0x2c, 0xa5, 0x42, 0x92, 0x74, 0x61, 0x08,
	0xe3, 0x3f, 0x1b, 0xe0, 0x3c, 0xa7, 0x3c, 0xba, 0x20, 0x99, 0x44, 0x7d, 0xa8, 0xb3, 0xd8, 0xaf,
	0x8d, 0x6a, 0x13, 0x37, 0xac, 0xb3, 0x18, 0x3d, 0x80, 0x0e, 0x7d, 0x2b, 0x29, 0xcf, 0x48, 0x82,
	0x59, 0xec, 0xd7, 0xf5, 0x06, 0x94, 0xd0, 0x49, 0x8c, 0x6e, 0x42, 0x93, 0xa6, 0x84, 0x25, 0x7e,
	0x43, 0x6f, 0x99, 0x05, 0x42, 0xb0, 0x97, 0x91, 0x94, 0xfa, 0x7b, 0x1a, 0xd4, 0xcf, 0x68, 0x0c,
	0xed, 0x28, 0x2f, 0x32, 0xc9, 0x97, 0x7e, 0x73, 0x54, 0x9b, 0x74, 0x0e, 0x9d, 0xe0, 0xc8, 0xac,
	0xc3, 0x72, 0x03, 0x3d, 0x81, 0x01, 0x89, 0xf4, 0x82, 0x65, 0xe7, 0x78, 0x41, 0x39, 0xcb, 0x63,
	0xbf, 0x35, 0xaa, 0x4d, 0xfa, 0x87, 0x83, 0x60, 0xba, 0xda, 0x99, 0xe9, 0x8d, 0xd0, 0x23, 0x1b,
	0x08, 0xfa, 0x18, 0x9c, 0xa8, 0xe0, 0x9c, 0x66, 0xd1, 0xd2, 0x6f, 0xeb, 0x43, 0xdc, 0xe0, 0xc8,
	0x02, 0xe1, 0x6a, 0x0b, 0x3d, 0x84, 0x3e, 0x13, 0xf8, 0x8a, 0x48, 0x4c, 0x33, 0x72, 0x96, 0xd0,
	0xd8, 0x77, 0x46, 0xb5, 0x89, 0x13, 0x76, 0x99, 0xf8, 0x91, 0xc8, 0x63, 0x83, 0xa1, 0x6f, 0xe1,
	0x3e, 0x13, 0x38, 0xca, 0xd3, 0x94, 0x09, 0xc1, 0xf2, 0x0c, 0xcb, 0x1c, 0x17, 0x82, 0xf2, 0x55,
	0x90, 0xab, 0x83, 0xee, 0x30, 0x71, 0xb4, 0xe2, 0xbc, 0xce, 0x4f, 0x05, 0xe5, 0xa5, 0xc2, 0x6d,
	0x68, 0x09, 0x49, 0x64, 0x21, 0x7c, 0x18, 0xd5, 0x26, 0xcd, 0xd0, 0xae, 0xd0, 0x97, 0x00, 0x11,
	0xa7, 0x44, 0xd2, 0x18, 0x13, 0xe9, 0x77, 0xf4, 0x8b, 0x0e, 0x03, 0x53, 0xa8, 0xa0, 0x2c, 0x54,
	0xf0, 0xba, 0x2c, 0x54, 0xe8, 0x5a, 0xf6, 0x54, 0xaa, 0xd0, 0x62, 0x11, 0x97, 0xa1, 0xdd, 0x7f,
	0x0f, 0xb5, 0xec, 0xa9, 0x1c, 0xff, 0x5e, 0x87, 0xee, 0x53, 0xf6, 0x96, 0xc6, 0x33, 0x12, 0x5d,
	0x92, 0x73, 0xba, 0x55, 0xec, 0xb2, 0x6a, 0xf5, 0x4a, 0xd5, 0x3e, 0x84, 0x6e, 0x99, 0x36, 0xcc,
	0x32, 0xa9, 0xcb, 0xdc, 0x0c, 0x3b, 0x25, 0x76, 0x92, 0x49, 0xd5, 0x02, 0x0b, 0xce, 0x22, 0x53,
	0xed, 0x5a, 0x68, 0x16, 0xe8, 0x2e, 0xb8, 0x4c, 0x60, 0x12, 0x49, 0x76, 0x45, 0x75, 0xc1, 0x9d,
	0xd0, 0x61, 0x62, 0xaa, 0xd7, 0x1b, 0x09, 0x68, 0xbd, 0x7f, 0x02, 0xda, 0xef, 0x90, 0x80, 0xb5,
	0xee, 0x70, 0xae, 0xed, 0x8e, 0xf1, 0x11, 0xf4, 0xaa, 0x69, 0x12, 0xe8, 0x10, 0x7a, 0x73, 0x05,
	0xe0, 0x85, 0x41, 0xfc, 0xda, 0xa8, 0x31, 0xe9, 0x1c, 0xf6, 0x82, 0x2a, 0x2d, 0xec, 0xce, 0x2b,
	0xab, 0x31, 0x86, 0x9b, 0x33, 0x33, 0x99, 0x33, 0xb2, 0x4c, 0x69, 0x26, 0x9f, 0x53, 0x79, 0x91,
	0xc7, 0x5b, 0x39, 0xff, 0x1c, 0x5c, 0x12, 0xc7, 0xea, 0x32, 0x53, 0xa9, 0x13, 0xff, 0xcf, 0xb7,
	0x71, 0x34, 0x79, 0x3a, 0x95, 0xe3, 0x9f, 0xe0, 0xd6, 0xae, 0x03, 0x04, 0x7a, 0x02, 0xfb, 0x0b,
	0x83, 0xe0, 0xd4, 0x40, 0xf6, 0x7d, 0x6f, 0x05, 0xbb, 0x02, 0xc2, 0xfe, 0x62, 0x2d, 0x7e, 0xfc,
	0x1b, 0x40, 0xdb, 0x12, 0xb7, 0xde, 0xf6, 0x33, 0x18, 0x44, 0x24, 0x49, 0xce, 0x48, 0x74, 0x89,
	0x57, 0xa9, 0xac, 0x6f, 0xa6, 0xd2, 0x2b, 0x39, 0x25, 0x82, 0x3e, 0xa9, 0xc4, 0xe9, 0x5b, 0x45,
	0x79, 0xe9, 0x18, 0x2b, 0xf2, 0xcc, 0xe2, 0xe8, 0x6b, 0xb8, 0x6b, 0xca, 0x8d, 0x59, 0x76, 0x95,
	0xb3, 0x88, 0x62, 0x92, 0x24, 0xf9, 0x1b, 0x1a, 0xe3, 0x82, 0x27, 0xc2, 0xdf, 0x1b, 0x35, 0x26,
	0x6e, 0xe8, 0x1b, 0xca, 0x89, 0x61, 0x4c, 0x0d, 0xe1, 0x94, 0x27, 0x42, 0x55, 0x39, 0xb5, 0x76,
	0x66, 0x8d, 0xc6, 0x0d, 0x4a, 0x7f, 0x0b, 0x57, 0x5b, 0xe8, 0x09, 0xdc, 0x53, 0xfd, 0xa9, 0x02,
	0x71, 0xbc, 0xcc, 0x48, 0xca, 0x22, 0x9c, 0xe5, 0x92, 0xcd, 0x97, 0xe6, 0x98, 0x96, 0x6e, 0x59,
	0x9f, 0x09, 0xad, 0xfd, 0xbd, 0x61, 0xbc, 0xd0, 0x04, 0x7d, 0xcc, 0x77, 0xf0, 0xc1, 0x56, 0x3c,
	0xa7, 0x31, 0xe3, 0x34, 0x92, 0x46, 0xa1, 0xad, 0x15, 0x86, 0xeb, 0x0a, 0xa1, 0xa5, 0x68, 0x8d,
	0x43, 0xd8, 0x4f, 0x58, 0xca, 0xa4, 0xc0, 0xd7, 0xf7, 0x65, 0xdf, 0x30, 0x56, 0xa9, 0x3c, 0x00,
	0xef, 0x39, 0x79, 0x6b, 0x4b, 0x38, 0x4d, 0x95, 0xff, 0x69, 0x23, 0xaa, 0x85, 0x5b, 0xb8, 0xe6,
	0xb2, 0x6c, 0x9d, 0x0b, 0x96, 0xbb, 0x81, 0xab, 0xe1, 0x7f, 0xa1, 0x86, 0xbf, 0x63, 0x86, 0xff,
	0x85, 0xb1, 0xec, 0xae, 0xb9, 0xf1, 0xb1, 0x72, 0x75, 0xe1, 0x77, 0x75, 0xea, 0xd7, 0x30, 0x75,
	0xc6, 0xcb, 0x2c, 0x59, 0xea, 0x51, 0x30, 0x52, 0xc2, 0xef, 0xe9, 0x9b, 0x6f, 0xe1, 0xe8, 0x1e,
	0xb8, 0xaf, 0x68, 0xc4, 0xa9, 0xfc, 0x81, 0x2e, 0xfd, 0xbe, 0x3e, 0xe8, 0x6f, 0x00, 0x4d, 0x60,
	0xff, 0x15, 0xcd, 0xe2, 0x8a, 0xba, 0xbf, 0xaf, 0x85, 0x36, 0x61, 0xc5, 0x3c, 0x0d, 0x9f, 0x1d,
	0x5d, 0xd0, 0xe8, 0xd2, 0x7e, 0x14, 0x7c, 0x4f, 0xab, 0x6d, 0xc2, 0xe8, 0x11, 0x0c, 0x4e, 0xc3,
	0x67, 0x33, 0x9e, 0x47, 0x54, 0x08, 0x7b, 0x61, 0x7f, 0xa0, 0xb9, 0xdb, 0x1b, 0x56, 0xb7, 0x2c,
	0xd1, 0x53, 0xf5, 0x06, 0x68, 0xa5, 0x5b, 0x85, 0x51, 0x00, 0xa8, 0x02, 0xbd, 0x2a, 0x22, 0x25,
	0xe3, 0xdf, 0xd0, 0xe4, 0x1d, 0x3b, 0xe8, 0x9b, 0x4d, 0x0b, 0xf9, 0xbf, 0x1e, 0xc9, 0x61, 0x39,
	0x92, 0x6b, 0x56, 0x72, 0xac, 0x3f, 0x8a, 0x6b, 0x7e, 0x82, 0x8e, 0xb7, 0xa7, 0xda, 0xd7, 0x12,
	0xf7, 0x56, 0x12, 0xeb, 0x3e, 0x60, 0x44, 0x36, 0x86, 0x1b, 0x0d, 0xc1, 0x39, 0xb1, 0x26, 0xec,
	0xdf, 0x34, 0xa6, 0x7c, 0xb2, 0xdb, 0x94, 0x6f, 0xbd, 0xbf, 0x29, 0xdf, 0x7e, 0x07, 0x53, 0x1e,
	0xbe, 0x84, 0xc1, 0xd6, 0xdd, 0x91, 0x07, 0x8d, 0x4b, 0xba, 0xb4, 0xc6, 0xa3, 0x1e, 0xd1, 0x43,
	0x68, 0x5e, 0x91, 0xa4, 0xa0, 0xd6, 0x6d, 0xfa, 0x6b, 0x09, 0x13, 0xa1, 0xd9, 0xfc, 0xaa, 0xfe,
	0x45, 0x6d, 0xf8, 0x33, 0xdc, 0xd8, 0x91, 0x89, 0x1d, 0x92, 0x8f, 0xd6, 0x25, 0x6f, 0xef, 0xb4,
	0xc7, 0xaa, 0xf4, 0xf8, 0x8f, 0x3a, 0x74, 0x2d, 0xe9, 0x25, 0x8f, 0x29, 0xff, 0x4f, 0x5f, 0xd0,
	0x07, 0xd0, 0x29, 0x78, 0x82, 0x85, 0xed, 0x11, 0xe3, 0x7a, 0x50, 0xf0, 0xa4, 0xec, 0x8d, 0x3b,
	0xe0, 0x28, 0xc2, 0x5c, 0xb5, 0x9b, 0xf9, 0x61, 0x6a, 0x17, 0x3c, 0xd1, 0x6d, 0xf6, 0x11, 0xf4,
	0xac, 0x27, 0x51, 0x33, 0x81, 0x4d, 0x33, 0x81, 0x59, 0x75, 0x02, 0xef, 0x03, 0x08, 0x3d, 0x44,
	0x58, 0x5d, 0xb0, 0x65, 0xc6, 0x4a, 0xac, 0xc6, 0xea, 0x00, 0x06, 0x82, 0x66, 0x31, 0xae, 0x0a,
	0x59, 0x6f, 0xda, 0x17, 0x1b, 0x83, 0x75, 0x00, 0x03, 0xf5, 0x2a, 0x91, 0x1a, 0x21, 0x6c, 0xff,
	0xae, 0xb4, 0x25, 0xb9, 0xe1, 0x7e, 0xc1, 0x93, 0xb5, 0xd1, 0x0a, 0xe0, 0x86, 0xe2, 0x2e, 0xcc,
	0x08, 0x61, 0xdb, 0x68, 0xda, 0x8b, 0xdc, 0x50, 0xc9, 0x6c, 0x0c, 0x57, 0xd5, 0x97, 0xe1, 0x5a,
	0x5f, 0x3e, 0x88, 0xc1, 0xdb, 0xfc, 0xd1, 0x43, 0x6d, 0x68, 0xc4, 0x64, 0xe9, 0xfd, 0x0f, 0x39,
	0xb0, 0xf7, 0x86, 0xd2, 0x4b, 0xaf, 0x86, 0xba, 0xe0, 0xc8, 0x37, 0x39, 0xd6, 0xab, 0x3a, 0x72,
	0xa1, 0x99, 0xe6, 0x99, 0xbc, 0xf0, 0x1a, 0xa8, 0x03, 0xed, 0x5f, 0x0b, 0xc2, 0x25, 0xe5, 0xde,
	0x1e, 0xea, 0x81, 0x7b, 0x41, 0x92, 0x39, 0x5e, 0x52, 0xc2, 0xbd, 0xa6, 0x0a, 0xd7, 0x4f, 0xad,
	0xb3, 0x96, 0x6e, 0xca, 0x4f, 0xff, 0x0a, 0x00, 0x00, 0xff, 0xff, 0xa5, 0xe9, 0x3a, 0xd4, 0x3f,
	0x0b, 0x00, 0x00,
}
