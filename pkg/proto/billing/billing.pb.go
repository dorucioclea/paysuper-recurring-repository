// Code generated by protoc-gen-go. DO NOT EDIT.
// source: billing/billing.proto

package billing // import "github.com/ProtocolONE/payone-repository/pkg/proto/billing"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Name struct {
	// @inject_tag: bson:"EN" json:"EN"
	En string `protobuf:"bytes,1,opt,name=en,proto3" json:"EN" bson:"EN"`
	// @inject_tag: bson:"RU" json:"RU"
	Ru                   string   `protobuf:"bytes,2,opt,name=ru,proto3" json:"RU" bson:"RU"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *Name) Reset()         { *m = Name{} }
func (m *Name) String() string { return proto.CompactTextString(m) }
func (*Name) ProtoMessage()    {}
func (*Name) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_349270f49f9a2286, []int{0}
}
func (m *Name) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Name.Unmarshal(m, b)
}
func (m *Name) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Name.Marshal(b, m, deterministic)
}
func (dst *Name) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Name.Merge(dst, src)
}
func (m *Name) XXX_Size() int {
	return xxx_messageInfo_Name.Size(m)
}
func (m *Name) XXX_DiscardUnknown() {
	xxx_messageInfo_Name.DiscardUnknown(m)
}

var xxx_messageInfo_Name proto.InternalMessageInfo

func (m *Name) GetEn() string {
	if m != nil {
		return m.En
	}
	return ""
}

func (m *Name) GetRu() string {
	if m != nil {
		return m.Ru
	}
	return ""
}

type Country struct {
	// @inject_tag: bson:"code_int"
	CodeInt int32 `protobuf:"varint,1,opt,name=code_int,json=codeInt,proto3" json:"code_int,omitempty" bson:"code_int"`
	// @inject_tag: bson:"code_a2"
	CodeA2 string `protobuf:"bytes,2,opt,name=code_a2,json=codeA2,proto3" json:"code_a2,omitempty" bson:"code_a2"`
	// @inject_tag: bson:"code_a3"
	CodeA3 string `protobuf:"bytes,3,opt,name=code_a3,json=codeA3,proto3" json:"code_a3,omitempty" bson:"code_a3"`
	// @inject_tag: bson:"name"
	Name *Name `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	// @inject_tag: bson:"is_active"
	IsActive bool `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty" bson:"is_active"`
	// @inject_tag: bson:"created_at,timestamp"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at,timestamp"`
	// @inject_tag: bson:"updated_at,timestamp"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" bson:"updated_at,timestamp"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *Country) Reset()         { *m = Country{} }
func (m *Country) String() string { return proto.CompactTextString(m) }
func (*Country) ProtoMessage()    {}
func (*Country) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_349270f49f9a2286, []int{1}
}
func (m *Country) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Country.Unmarshal(m, b)
}
func (m *Country) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Country.Marshal(b, m, deterministic)
}
func (dst *Country) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Country.Merge(dst, src)
}
func (m *Country) XXX_Size() int {
	return xxx_messageInfo_Country.Size(m)
}
func (m *Country) XXX_DiscardUnknown() {
	xxx_messageInfo_Country.DiscardUnknown(m)
}

var xxx_messageInfo_Country proto.InternalMessageInfo

func (m *Country) GetCodeInt() int32 {
	if m != nil {
		return m.CodeInt
	}
	return 0
}

func (m *Country) GetCodeA2() string {
	if m != nil {
		return m.CodeA2
	}
	return ""
}

func (m *Country) GetCodeA3() string {
	if m != nil {
		return m.CodeA3
	}
	return ""
}

func (m *Country) GetName() *Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Country) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *Country) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Country) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type Currency struct {
	// @inject_tag: bson:"code_int"
	CodeInt int32 `protobuf:"varint,1,opt,name=code_int,json=codeInt,proto3" json:"code_int,omitempty" bson:"code_int"`
	// @inject_tag: bson:"code_a3"
	CodeA3 string `protobuf:"bytes,2,opt,name=code_a3,json=codeA3,proto3" json:"code_a3,omitempty" bson:"code_a3"`
	// @inject_tag: bson:"name"
	Name *Name `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	// @inject_tag: bson:"is_active"
	IsActive bool `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty" bson:"is_active"`
	// @inject_tag: bson:"created_at,timestamp"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at,timestamp"`
	// @inject_tag: bson:"updated_at,timestamp"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" bson:"updated_at,timestamp"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *Currency) Reset()         { *m = Currency{} }
func (m *Currency) String() string { return proto.CompactTextString(m) }
func (*Currency) ProtoMessage()    {}
func (*Currency) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_349270f49f9a2286, []int{2}
}
func (m *Currency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Currency.Unmarshal(m, b)
}
func (m *Currency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Currency.Marshal(b, m, deterministic)
}
func (dst *Currency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Currency.Merge(dst, src)
}
func (m *Currency) XXX_Size() int {
	return xxx_messageInfo_Currency.Size(m)
}
func (m *Currency) XXX_DiscardUnknown() {
	xxx_messageInfo_Currency.DiscardUnknown(m)
}

var xxx_messageInfo_Currency proto.InternalMessageInfo

func (m *Currency) GetCodeInt() int32 {
	if m != nil {
		return m.CodeInt
	}
	return 0
}

func (m *Currency) GetCodeA3() string {
	if m != nil {
		return m.CodeA3
	}
	return ""
}

func (m *Currency) GetName() *Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Currency) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *Currency) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Currency) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type Merchant struct {
	// @inject_tag: bson:"_id,bsonobjectid"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id,bsonobjectid"`
	// @inject_tag: bson:"external_id"
	ExternalId string `protobuf:"bytes,2,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty" bson:"external_id"`
	// @inject_tag: bson:"email"
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty" bson:"email"`
	// @inject_tag: bson:"name"
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	// @inject_tag: bson:"country"
	Country *Country `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty" bson:"country"`
	// @inject_tag: bson:"accounting_period"
	AccountingPeriod string `protobuf:"bytes,6,opt,name=accounting_period,json=accountingPeriod,proto3" json:"accounting_period,omitempty" bson:"accounting_period"`
	// @inject_tag: bson:"currency"
	Currency *Currency `protobuf:"bytes,7,opt,name=currency,proto3" json:"currency,omitempty" bson:"currency"`
	// @inject_tag: bson:"is_vat_enabled"
	IsVatEnabled bool `protobuf:"varint,8,opt,name=is_vat_enabled,json=isVatEnabled,proto3" json:"is_vat_enabled,omitempty" bson:"is_vat_enabled"`
	// @inject_tag: bson:"is_commission_to_user_enabled"
	IsCommissionToUserEnabled bool `protobuf:"varint,9,opt,name=is_commission_to_user_enabled,json=isCommissionToUserEnabled,proto3" json:"is_commission_to_user_enabled,omitempty" bson:"is_commission_to_user_enabled"`
	// @inject_tag: bson:"status"
	Status int32 `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty" bson:"status"`
	// @inject_tag: bson:"created_at,timestamp"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at,timestamp"`
	// @inject_tag: bson:"updated_at,timestamp"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" bson:"updated_at,timestamp"`
	// @inject_tag: bson:"first_payment_at,timestamp"
	FirstPaymentAt       *timestamp.Timestamp `protobuf:"bytes,13,opt,name=first_payment_at,json=firstPaymentAt,proto3" json:"first_payment_at,omitempty" bson:"first_payment_at,timestamp"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *Merchant) Reset()         { *m = Merchant{} }
func (m *Merchant) String() string { return proto.CompactTextString(m) }
func (*Merchant) ProtoMessage()    {}
func (*Merchant) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_349270f49f9a2286, []int{3}
}
func (m *Merchant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Merchant.Unmarshal(m, b)
}
func (m *Merchant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Merchant.Marshal(b, m, deterministic)
}
func (dst *Merchant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Merchant.Merge(dst, src)
}
func (m *Merchant) XXX_Size() int {
	return xxx_messageInfo_Merchant.Size(m)
}
func (m *Merchant) XXX_DiscardUnknown() {
	xxx_messageInfo_Merchant.DiscardUnknown(m)
}

var xxx_messageInfo_Merchant proto.InternalMessageInfo

func (m *Merchant) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Merchant) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *Merchant) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Merchant) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Merchant) GetCountry() *Country {
	if m != nil {
		return m.Country
	}
	return nil
}

func (m *Merchant) GetAccountingPeriod() string {
	if m != nil {
		return m.AccountingPeriod
	}
	return ""
}

func (m *Merchant) GetCurrency() *Currency {
	if m != nil {
		return m.Currency
	}
	return nil
}

func (m *Merchant) GetIsVatEnabled() bool {
	if m != nil {
		return m.IsVatEnabled
	}
	return false
}

func (m *Merchant) GetIsCommissionToUserEnabled() bool {
	if m != nil {
		return m.IsCommissionToUserEnabled
	}
	return false
}

func (m *Merchant) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Merchant) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Merchant) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Merchant) GetFirstPaymentAt() *timestamp.Timestamp {
	if m != nil {
		return m.FirstPaymentAt
	}
	return nil
}

type FixedPackage struct {
	// @inject_tag: bson:"id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"id"`
	// @inject_tag: bson:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	// @inject_tag: bson:"currency_int"
	CurrencyInt int32 `protobuf:"varint,3,opt,name=currency_int,json=currencyInt,proto3" json:"currency_int,omitempty" bson:"currency_int"`
	// @inject_tag: bson:"price"
	Price float64 `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty" bson:"price"`
	// @inject_tag: bson:"is_active"
	IsActive bool `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty" bson:"is_active"`
	// @inject_tag: bson:"created_at,timestamp"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at,timestamp"`
	// @inject_tag: bson:"updated_at,timestamp"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" bson:"updated_at,timestamp"`
	Currency             *Currency            `protobuf:"bytes,8,opt,name=currency,proto3" json:"currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *FixedPackage) Reset()         { *m = FixedPackage{} }
func (m *FixedPackage) String() string { return proto.CompactTextString(m) }
func (*FixedPackage) ProtoMessage()    {}
func (*FixedPackage) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_349270f49f9a2286, []int{4}
}
func (m *FixedPackage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FixedPackage.Unmarshal(m, b)
}
func (m *FixedPackage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FixedPackage.Marshal(b, m, deterministic)
}
func (dst *FixedPackage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FixedPackage.Merge(dst, src)
}
func (m *FixedPackage) XXX_Size() int {
	return xxx_messageInfo_FixedPackage.Size(m)
}
func (m *FixedPackage) XXX_DiscardUnknown() {
	xxx_messageInfo_FixedPackage.DiscardUnknown(m)
}

var xxx_messageInfo_FixedPackage proto.InternalMessageInfo

func (m *FixedPackage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FixedPackage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FixedPackage) GetCurrencyInt() int32 {
	if m != nil {
		return m.CurrencyInt
	}
	return 0
}

func (m *FixedPackage) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *FixedPackage) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *FixedPackage) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *FixedPackage) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *FixedPackage) GetCurrency() *Currency {
	if m != nil {
		return m.Currency
	}
	return nil
}

type FixedPackages struct {
	FixedPackage         []*FixedPackage `protobuf:"bytes,1,rep,name=fixed_package,json=fixedPackage,proto3" json:"fixed_package,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-" bson:"-"`
	XXX_unrecognized     []byte          `json:"-" bson:"-"`
	XXX_sizecache        int32           `json:"-" bson:"-"`
}

func (m *FixedPackages) Reset()         { *m = FixedPackages{} }
func (m *FixedPackages) String() string { return proto.CompactTextString(m) }
func (*FixedPackages) ProtoMessage()    {}
func (*FixedPackages) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_349270f49f9a2286, []int{5}
}
func (m *FixedPackages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FixedPackages.Unmarshal(m, b)
}
func (m *FixedPackages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FixedPackages.Marshal(b, m, deterministic)
}
func (dst *FixedPackages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FixedPackages.Merge(dst, src)
}
func (m *FixedPackages) XXX_Size() int {
	return xxx_messageInfo_FixedPackages.Size(m)
}
func (m *FixedPackages) XXX_DiscardUnknown() {
	xxx_messageInfo_FixedPackages.DiscardUnknown(m)
}

var xxx_messageInfo_FixedPackages proto.InternalMessageInfo

func (m *FixedPackages) GetFixedPackage() []*FixedPackage {
	if m != nil {
		return m.FixedPackage
	}
	return nil
}

type ProjectPaymentMethod struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AddedAt              *timestamp.Timestamp `protobuf:"bytes,2,opt,name=added_at,json=addedAt,proto3" json:"added_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *ProjectPaymentMethod) Reset()         { *m = ProjectPaymentMethod{} }
func (m *ProjectPaymentMethod) String() string { return proto.CompactTextString(m) }
func (*ProjectPaymentMethod) ProtoMessage()    {}
func (*ProjectPaymentMethod) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_349270f49f9a2286, []int{6}
}
func (m *ProjectPaymentMethod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectPaymentMethod.Unmarshal(m, b)
}
func (m *ProjectPaymentMethod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectPaymentMethod.Marshal(b, m, deterministic)
}
func (dst *ProjectPaymentMethod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectPaymentMethod.Merge(dst, src)
}
func (m *ProjectPaymentMethod) XXX_Size() int {
	return xxx_messageInfo_ProjectPaymentMethod.Size(m)
}
func (m *ProjectPaymentMethod) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectPaymentMethod.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectPaymentMethod proto.InternalMessageInfo

func (m *ProjectPaymentMethod) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProjectPaymentMethod) GetAddedAt() *timestamp.Timestamp {
	if m != nil {
		return m.AddedAt
	}
	return nil
}

type ProjectPaymentMethods struct {
	PaymentMethods       []*ProjectPaymentMethod `protobuf:"bytes,1,rep,name=payment_methods,json=paymentMethods,proto3" json:"payment_methods,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-" bson:"-"`
	XXX_unrecognized     []byte                  `json:"-" bson:"-"`
	XXX_sizecache        int32                   `json:"-" bson:"-"`
}

func (m *ProjectPaymentMethods) Reset()         { *m = ProjectPaymentMethods{} }
func (m *ProjectPaymentMethods) String() string { return proto.CompactTextString(m) }
func (*ProjectPaymentMethods) ProtoMessage()    {}
func (*ProjectPaymentMethods) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_349270f49f9a2286, []int{7}
}
func (m *ProjectPaymentMethods) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectPaymentMethods.Unmarshal(m, b)
}
func (m *ProjectPaymentMethods) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectPaymentMethods.Marshal(b, m, deterministic)
}
func (dst *ProjectPaymentMethods) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectPaymentMethods.Merge(dst, src)
}
func (m *ProjectPaymentMethods) XXX_Size() int {
	return xxx_messageInfo_ProjectPaymentMethods.Size(m)
}
func (m *ProjectPaymentMethods) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectPaymentMethods.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectPaymentMethods proto.InternalMessageInfo

func (m *ProjectPaymentMethods) GetPaymentMethods() []*ProjectPaymentMethod {
	if m != nil {
		return m.PaymentMethods
	}
	return nil
}

type Project struct {
	// @inject_tag: bson:"_id,bsonobjectid"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id,bsonobjectid"`
	// @inject_tag: bson:"callback_currency"
	CallbackCurrency *Currency `protobuf:"bytes,2,opt,name=callback_currency,json=callbackCurrency,proto3" json:"callback_currency,omitempty" bson:"callback_currency"`
	// @inject_tag: bson:"callback_protocol"
	CallbackProtocol string `protobuf:"bytes,3,opt,name=callback_protocol,json=callbackProtocol,proto3" json:"callback_protocol,omitempty" bson:"callback_protocol"`
	// @inject_tag: bson:"create_invoice_allowed_urls"
	CreateInvoiceAllowedUrls []string `protobuf:"bytes,4,rep,name=create_invoice_allowed_urls,json=createInvoiceAllowedUrls,proto3" json:"create_invoice_allowed_urls,omitempty" bson:"create_invoice_allowed_urls"`
	// @inject_tag: bson:"merchant" json:"-"
	Merchant *Merchant `protobuf:"bytes,5,opt,name=merchant,proto3" json:"-" bson:"merchant"`
	// @inject_tag: bson:"is_allow_dynamic_notify_urls"
	IsAllowDynamicNotifyUrls bool `protobuf:"varint,6,opt,name=is_allow_dynamic_notify_urls,json=isAllowDynamicNotifyUrls,proto3" json:"is_allow_dynamic_notify_urls,omitempty" bson:"is_allow_dynamic_notify_urls"`
	// @inject_tag: bson:"is_allow_dynamic_redirect_urls"
	IsAllowDynamicRedirectUrls bool `protobuf:"varint,7,opt,name=is_allow_dynamic_redirect_urls,json=isAllowDynamicRedirectUrls,proto3" json:"is_allow_dynamic_redirect_urls,omitempty" bson:"is_allow_dynamic_redirect_urls"`
	// @inject_tag: bson:"limits_currency"
	LimitsCurrency *Currency `protobuf:"bytes,8,opt,name=limits_currency,json=limitsCurrency,proto3" json:"limits_currency,omitempty" bson:"limits_currency"`
	// @inject_tag: bson:"max_payment_amount"
	MaxPaymentAmount float64 `protobuf:"fixed64,9,opt,name=max_payment_amount,json=maxPaymentAmount,proto3" json:"max_payment_amount,omitempty" bson:"max_payment_amount"`
	// @inject_tag: bson:"min_payment_amount"
	MinPaymentAmount float64 `protobuf:"fixed64,10,opt,name=min_payment_amount,json=minPaymentAmount,proto3" json:"min_payment_amount,omitempty" bson:"min_payment_amount"`
	// @inject_tag: bson:"name"
	Name string `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	// @inject_tag: bson:"notify_emails"
	NotifyEmails []string `protobuf:"bytes,12,rep,name=notify_emails,json=notifyEmails,proto3" json:"notify_emails,omitempty" bson:"notify_emails"`
	// @inject_tag: bson:"only_fixed_amounts"
	OnlyFixedAmounts bool `protobuf:"varint,13,opt,name=only_fixed_amounts,json=onlyFixedAmounts,proto3" json:"only_fixed_amounts,omitempty" bson:"only_fixed_amounts"`
	// @inject_tag: bson:"secret_key"
	SecretKey string `protobuf:"bytes,14,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty" bson:"secret_key"`
	// @inject_tag: bson:"send_notify_email"
	SendNotifyEmail bool `protobuf:"varint,15,opt,name=send_notify_email,json=sendNotifyEmail,proto3" json:"send_notify_email,omitempty" bson:"send_notify_email"`
	// @inject_tag: bson:"url_check_account"
	UrlCheckAccount string `protobuf:"bytes,16,opt,name=url_check_account,json=urlCheckAccount,proto3" json:"url_check_account,omitempty" bson:"url_check_account"`
	// @inject_tag: bson:"url_process_payment"
	UrlProcessPayment string `protobuf:"bytes,17,opt,name=url_process_payment,json=urlProcessPayment,proto3" json:"url_process_payment,omitempty" bson:"url_process_payment"`
	// @inject_tag: bson:"url_redirect_fail"
	UrlRedirectFail string `protobuf:"bytes,18,opt,name=url_redirect_fail,json=urlRedirectFail,proto3" json:"url_redirect_fail,omitempty" bson:"url_redirect_fail"`
	// @inject_tag: bson:"url_redirect_success"
	UrlRedirectSuccess string `protobuf:"bytes,19,opt,name=url_redirect_success,json=urlRedirectSuccess,proto3" json:"url_redirect_success,omitempty" bson:"url_redirect_success"`
	// @inject_tag: bson:"fixed_package"
	FixedPackage map[string]*FixedPackages `protobuf:"bytes,23,rep,name=fixed_package,json=fixedPackage,proto3" json:"fixed_package,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"fixed_package"`
	// @inject_tag: bson:"payment_methods"
	PaymentMethods map[string]*ProjectPaymentMethods `protobuf:"bytes,24,rep,name=payment_methods,json=paymentMethods,proto3" json:"payment_methods,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"payment_methods"`
	// @inject_tag: bson:"is_active"
	IsActive bool `protobuf:"varint,20,opt,name=IsActive,proto3" json:"IsActive,omitempty" bson:"is_active"`
	// @inject_tag: bson:"created_at,timestamp"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,21,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at,timestamp"`
	// @inject_tag: bson:"updated_at,timestamp"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,22,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" bson:"updated_at,timestamp"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *Project) Reset()         { *m = Project{} }
func (m *Project) String() string { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()    {}
func (*Project) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_349270f49f9a2286, []int{8}
}
func (m *Project) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Project.Unmarshal(m, b)
}
func (m *Project) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Project.Marshal(b, m, deterministic)
}
func (dst *Project) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Project.Merge(dst, src)
}
func (m *Project) XXX_Size() int {
	return xxx_messageInfo_Project.Size(m)
}
func (m *Project) XXX_DiscardUnknown() {
	xxx_messageInfo_Project.DiscardUnknown(m)
}

var xxx_messageInfo_Project proto.InternalMessageInfo

func (m *Project) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Project) GetCallbackCurrency() *Currency {
	if m != nil {
		return m.CallbackCurrency
	}
	return nil
}

func (m *Project) GetCallbackProtocol() string {
	if m != nil {
		return m.CallbackProtocol
	}
	return ""
}

func (m *Project) GetCreateInvoiceAllowedUrls() []string {
	if m != nil {
		return m.CreateInvoiceAllowedUrls
	}
	return nil
}

func (m *Project) GetMerchant() *Merchant {
	if m != nil {
		return m.Merchant
	}
	return nil
}

func (m *Project) GetIsAllowDynamicNotifyUrls() bool {
	if m != nil {
		return m.IsAllowDynamicNotifyUrls
	}
	return false
}

func (m *Project) GetIsAllowDynamicRedirectUrls() bool {
	if m != nil {
		return m.IsAllowDynamicRedirectUrls
	}
	return false
}

func (m *Project) GetLimitsCurrency() *Currency {
	if m != nil {
		return m.LimitsCurrency
	}
	return nil
}

func (m *Project) GetMaxPaymentAmount() float64 {
	if m != nil {
		return m.MaxPaymentAmount
	}
	return 0
}

func (m *Project) GetMinPaymentAmount() float64 {
	if m != nil {
		return m.MinPaymentAmount
	}
	return 0
}

func (m *Project) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Project) GetNotifyEmails() []string {
	if m != nil {
		return m.NotifyEmails
	}
	return nil
}

func (m *Project) GetOnlyFixedAmounts() bool {
	if m != nil {
		return m.OnlyFixedAmounts
	}
	return false
}

func (m *Project) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

func (m *Project) GetSendNotifyEmail() bool {
	if m != nil {
		return m.SendNotifyEmail
	}
	return false
}

func (m *Project) GetUrlCheckAccount() string {
	if m != nil {
		return m.UrlCheckAccount
	}
	return ""
}

func (m *Project) GetUrlProcessPayment() string {
	if m != nil {
		return m.UrlProcessPayment
	}
	return ""
}

func (m *Project) GetUrlRedirectFail() string {
	if m != nil {
		return m.UrlRedirectFail
	}
	return ""
}

func (m *Project) GetUrlRedirectSuccess() string {
	if m != nil {
		return m.UrlRedirectSuccess
	}
	return ""
}

func (m *Project) GetFixedPackage() map[string]*FixedPackages {
	if m != nil {
		return m.FixedPackage
	}
	return nil
}

func (m *Project) GetPaymentMethods() map[string]*ProjectPaymentMethods {
	if m != nil {
		return m.PaymentMethods
	}
	return nil
}

func (m *Project) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *Project) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Project) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type ProjectOrder struct {
	// @inject_tag: bson:"_id,bsonobjectid"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id,bsonobjectid"`
	// @inject_tag: bson:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	// @inject_tag: bson:"url_redirect_success"
	UrlSuccess string `protobuf:"bytes,3,opt,name=url_success,json=urlSuccess,proto3" json:"url_success,omitempty" bson:"url_redirect_success"`
	// @inject_tag: bson:"url_redirect_fail"
	UrlFail string `protobuf:"bytes,4,opt,name=url_fail,json=urlFail,proto3" json:"url_fail,omitempty" bson:"url_redirect_fail"`
	// @inject_tag: bson:"notify_emails"
	NotifyEmails []string `protobuf:"bytes,5,rep,name=notify_emails,json=notifyEmails,proto3" json:"notify_emails,omitempty" bson:"notify_emails"`
	// @inject_tag: bson:"secret_key"
	SecretKey string `protobuf:"bytes,6,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty" bson:"secret_key"`
	// @inject_tag: bson:"send_notify_email"
	SendNotifyEmail bool `protobuf:"varint,7,opt,name=send_notify_email,json=sendNotifyEmail,proto3" json:"send_notify_email,omitempty" bson:"send_notify_email"`
	// @inject_tag: bson:"url_check_account"
	UrlCheckAccount string `protobuf:"bytes,8,opt,name=url_check_account,json=urlCheckAccount,proto3" json:"url_check_account,omitempty" bson:"url_check_account"`
	// @inject_tag: bson:"url_process_payment"
	UrlProcessPayment string `protobuf:"bytes,9,opt,name=url_process_payment,json=urlProcessPayment,proto3" json:"url_process_payment,omitempty" bson:"url_process_payment"`
	// @inject_tag: bson:"callback_protocol"
	CallbackProtocol string `protobuf:"bytes,10,opt,name=callback_protocol,json=callbackProtocol,proto3" json:"callback_protocol,omitempty" bson:"callback_protocol"`
	// @inject_tag: bson:"merchant"
	Merchant             *Merchant `protobuf:"bytes,12,opt,name=merchant,proto3" json:"merchant,omitempty" bson:"merchant"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-" bson:"-"`
	XXX_unrecognized     []byte    `json:"-" bson:"-"`
	XXX_sizecache        int32     `json:"-" bson:"-"`
}

func (m *ProjectOrder) Reset()         { *m = ProjectOrder{} }
func (m *ProjectOrder) String() string { return proto.CompactTextString(m) }
func (*ProjectOrder) ProtoMessage()    {}
func (*ProjectOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_349270f49f9a2286, []int{9}
}
func (m *ProjectOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectOrder.Unmarshal(m, b)
}
func (m *ProjectOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectOrder.Marshal(b, m, deterministic)
}
func (dst *ProjectOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectOrder.Merge(dst, src)
}
func (m *ProjectOrder) XXX_Size() int {
	return xxx_messageInfo_ProjectOrder.Size(m)
}
func (m *ProjectOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectOrder.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectOrder proto.InternalMessageInfo

func (m *ProjectOrder) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProjectOrder) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProjectOrder) GetUrlSuccess() string {
	if m != nil {
		return m.UrlSuccess
	}
	return ""
}

func (m *ProjectOrder) GetUrlFail() string {
	if m != nil {
		return m.UrlFail
	}
	return ""
}

func (m *ProjectOrder) GetNotifyEmails() []string {
	if m != nil {
		return m.NotifyEmails
	}
	return nil
}

func (m *ProjectOrder) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

func (m *ProjectOrder) GetSendNotifyEmail() bool {
	if m != nil {
		return m.SendNotifyEmail
	}
	return false
}

func (m *ProjectOrder) GetUrlCheckAccount() string {
	if m != nil {
		return m.UrlCheckAccount
	}
	return ""
}

func (m *ProjectOrder) GetUrlProcessPayment() string {
	if m != nil {
		return m.UrlProcessPayment
	}
	return ""
}

func (m *ProjectOrder) GetCallbackProtocol() string {
	if m != nil {
		return m.CallbackProtocol
	}
	return ""
}

func (m *ProjectOrder) GetMerchant() *Merchant {
	if m != nil {
		return m.Merchant
	}
	return nil
}

type PaymentSystem struct {
	// @inject_tag: bson:"_id,bsonobjectid"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id,bsonobjectid"`
	// @inject_tag: bson:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	// @inject_tag: bson:"country"
	Country *Country `protobuf:"bytes,3,opt,name=Country,proto3" json:"Country,omitempty" bson:"country"`
	// @inject_tag: bson:"accounting_currency"
	AccountingCurrency *Currency `protobuf:"bytes,4,opt,name=accounting_currency,json=accountingCurrency,proto3" json:"accounting_currency,omitempty" bson:"accounting_currency"`
	// @inject_tag: bson:"accounting_period"
	AccountingPeriod string `protobuf:"bytes,5,opt,name=accounting_period,json=accountingPeriod,proto3" json:"accounting_period,omitempty" bson:"accounting_period"`
	// @inject_tag: bson:"is_active"
	IsActive bool `protobuf:"varint,6,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty" bson:"is_active"`
	// @inject_tag: bson:"created_at,timestamp"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at,timestamp"`
	// @inject_tag: bson:"updated_at,timestamp"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" bson:"updated_at,timestamp"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *PaymentSystem) Reset()         { *m = PaymentSystem{} }
func (m *PaymentSystem) String() string { return proto.CompactTextString(m) }
func (*PaymentSystem) ProtoMessage()    {}
func (*PaymentSystem) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_349270f49f9a2286, []int{10}
}
func (m *PaymentSystem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentSystem.Unmarshal(m, b)
}
func (m *PaymentSystem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentSystem.Marshal(b, m, deterministic)
}
func (dst *PaymentSystem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentSystem.Merge(dst, src)
}
func (m *PaymentSystem) XXX_Size() int {
	return xxx_messageInfo_PaymentSystem.Size(m)
}
func (m *PaymentSystem) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentSystem.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentSystem proto.InternalMessageInfo

func (m *PaymentSystem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PaymentSystem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PaymentSystem) GetCountry() *Country {
	if m != nil {
		return m.Country
	}
	return nil
}

func (m *PaymentSystem) GetAccountingCurrency() *Currency {
	if m != nil {
		return m.AccountingCurrency
	}
	return nil
}

func (m *PaymentSystem) GetAccountingPeriod() string {
	if m != nil {
		return m.AccountingPeriod
	}
	return ""
}

func (m *PaymentSystem) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *PaymentSystem) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *PaymentSystem) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type PaymentMethodParams struct {
	// @inject_tag: bson:"handler"
	Handler string `protobuf:"bytes,1,opt,name=handler,proto3" json:"handler,omitempty" bson:"handler"`
	// @inject_tag: bson:"terminal"
	Terminal string `protobuf:"bytes,2,opt,name=terminal,proto3" json:"terminal,omitempty" bson:"terminal"`
	// @inject_tag: bson:"external_id"
	ExternalId string `protobuf:"bytes,3,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty" bson:"external_id"`
	// @inject_tag: bson:"other"
	Other                map[string]string `protobuf:"bytes,4,rep,name=other,proto3" json:"other,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"other"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-" bson:"-"`
	XXX_unrecognized     []byte            `json:"-" bson:"-"`
	XXX_sizecache        int32             `json:"-" bson:"-"`
}

func (m *PaymentMethodParams) Reset()         { *m = PaymentMethodParams{} }
func (m *PaymentMethodParams) String() string { return proto.CompactTextString(m) }
func (*PaymentMethodParams) ProtoMessage()    {}
func (*PaymentMethodParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_349270f49f9a2286, []int{11}
}
func (m *PaymentMethodParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethodParams.Unmarshal(m, b)
}
func (m *PaymentMethodParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethodParams.Marshal(b, m, deterministic)
}
func (dst *PaymentMethodParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethodParams.Merge(dst, src)
}
func (m *PaymentMethodParams) XXX_Size() int {
	return xxx_messageInfo_PaymentMethodParams.Size(m)
}
func (m *PaymentMethodParams) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethodParams.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethodParams proto.InternalMessageInfo

func (m *PaymentMethodParams) GetHandler() string {
	if m != nil {
		return m.Handler
	}
	return ""
}

func (m *PaymentMethodParams) GetTerminal() string {
	if m != nil {
		return m.Terminal
	}
	return ""
}

func (m *PaymentMethodParams) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *PaymentMethodParams) GetOther() map[string]string {
	if m != nil {
		return m.Other
	}
	return nil
}

type PaymentMethod struct {
	// @inject_tag: bson:"_id,bsonobjectid"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id,bsonobjectid"`
	// @inject_tag: bson:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	// @inject_tag: bson:"group"
	Group string `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty" bson:"group"`
	// @inject_tag: bson:"currencies"
	Currencies []int32 `protobuf:"varint,5,rep,packed,name=currencies,proto3" json:"currencies,omitempty" bson:"currencies"`
	// @inject_tag: bson:"min_payment_amount"
	MinPaymentAmount float64 `protobuf:"fixed64,6,opt,name=min_payment_amount,json=minPaymentAmount,proto3" json:"min_payment_amount,omitempty" bson:"min_payment_amount"`
	// @inject_tag: bson:"max_payment_amount"
	MaxPaymentAmount float64 `protobuf:"fixed64,7,opt,name=max_payment_amount,json=maxPaymentAmount,proto3" json:"max_payment_amount,omitempty" bson:"max_payment_amount"`
	// @inject_tag: bson:"params"
	Params *PaymentMethodParams `protobuf:"bytes,8,opt,name=params,proto3" json:"params,omitempty" bson:"params"`
	// @inject_tag: bson:"icon"
	Icon string `protobuf:"bytes,9,opt,name=Icon,proto3" json:"Icon,omitempty" bson:"icon"`
	// @inject_tag: bson:"payment_system"
	PaymentSystem *PaymentSystem `protobuf:"bytes,10,opt,name=payment_system,json=paymentSystem,proto3" json:"payment_system,omitempty" bson:"payment_system"`
	// @inject_tag: bson:"type"
	Type string `protobuf:"bytes,11,opt,name=type,proto3" json:"type,omitempty" bson:"type"`
	// @inject_tag: bson:"account_regexp"
	AccountRegexp string `protobuf:"bytes,12,opt,name=account_regexp,json=accountRegexp,proto3" json:"account_regexp,omitempty" bson:"account_regexp"`
	// @inject_tag: bson:"is_active"
	IsActive bool `protobuf:"varint,13,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty" bson:"is_active"`
	// @inject_tag: bson:"created_at,timestamp"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at,timestamp"`
	// @inject_tag: bson:"updated_at,timestamp"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" bson:"updated_at,timestamp"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *PaymentMethod) Reset()         { *m = PaymentMethod{} }
func (m *PaymentMethod) String() string { return proto.CompactTextString(m) }
func (*PaymentMethod) ProtoMessage()    {}
func (*PaymentMethod) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_349270f49f9a2286, []int{12}
}
func (m *PaymentMethod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethod.Unmarshal(m, b)
}
func (m *PaymentMethod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethod.Marshal(b, m, deterministic)
}
func (dst *PaymentMethod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethod.Merge(dst, src)
}
func (m *PaymentMethod) XXX_Size() int {
	return xxx_messageInfo_PaymentMethod.Size(m)
}
func (m *PaymentMethod) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethod.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethod proto.InternalMessageInfo

func (m *PaymentMethod) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PaymentMethod) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PaymentMethod) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *PaymentMethod) GetCurrencies() []int32 {
	if m != nil {
		return m.Currencies
	}
	return nil
}

func (m *PaymentMethod) GetMinPaymentAmount() float64 {
	if m != nil {
		return m.MinPaymentAmount
	}
	return 0
}

func (m *PaymentMethod) GetMaxPaymentAmount() float64 {
	if m != nil {
		return m.MaxPaymentAmount
	}
	return 0
}

func (m *PaymentMethod) GetParams() *PaymentMethodParams {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *PaymentMethod) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *PaymentMethod) GetPaymentSystem() *PaymentSystem {
	if m != nil {
		return m.PaymentSystem
	}
	return nil
}

func (m *PaymentMethod) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PaymentMethod) GetAccountRegexp() string {
	if m != nil {
		return m.AccountRegexp
	}
	return ""
}

func (m *PaymentMethod) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *PaymentMethod) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *PaymentMethod) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type PaymentMethodOrder struct {
	// @inject_tag: bson:"_id,bsonobjectid"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id,bsonobjectid"`
	// @inject_tag: bson:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	// @inject_tag: bson:"params"
	Params *PaymentMethodParams `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty" bson:"params"`
	// @inject_tag: bson:"payment_system"
	PaymentSystem *PaymentSystem `protobuf:"bytes,4,opt,name=payment_system,json=paymentSystem,proto3" json:"payment_system,omitempty" bson:"payment_system"`
	// @inject_tag: bson:"group_alias"
	GroupAlias           string   `protobuf:"bytes,5,opt,name=group_alias,json=groupAlias,proto3" json:"group_alias,omitempty" bson:"group_alias"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *PaymentMethodOrder) Reset()         { *m = PaymentMethodOrder{} }
func (m *PaymentMethodOrder) String() string { return proto.CompactTextString(m) }
func (*PaymentMethodOrder) ProtoMessage()    {}
func (*PaymentMethodOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_349270f49f9a2286, []int{13}
}
func (m *PaymentMethodOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentMethodOrder.Unmarshal(m, b)
}
func (m *PaymentMethodOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentMethodOrder.Marshal(b, m, deterministic)
}
func (dst *PaymentMethodOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentMethodOrder.Merge(dst, src)
}
func (m *PaymentMethodOrder) XXX_Size() int {
	return xxx_messageInfo_PaymentMethodOrder.Size(m)
}
func (m *PaymentMethodOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentMethodOrder.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentMethodOrder proto.InternalMessageInfo

func (m *PaymentMethodOrder) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PaymentMethodOrder) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PaymentMethodOrder) GetParams() *PaymentMethodParams {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *PaymentMethodOrder) GetPaymentSystem() *PaymentSystem {
	if m != nil {
		return m.PaymentSystem
	}
	return nil
}

func (m *PaymentMethodOrder) GetGroupAlias() string {
	if m != nil {
		return m.GroupAlias
	}
	return ""
}

type PayerData struct {
	// @inject_tag: bson:"ip"
	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty" bson:"ip"`
	// @inject_tag: bson:"country_code_a2"
	CountryCodeA2 string `protobuf:"bytes,2,opt,name=country_code_a2,json=countryCodeA2,proto3" json:"country_code_a2,omitempty" bson:"country_code_a2"`
	// @inject_tag: bson:"country_name"
	CountryName *Name `protobuf:"bytes,3,opt,name=country_name,json=countryName,proto3" json:"country_name,omitempty" bson:"country_name"`
	// @inject_tag: bson:"city"
	City *Name `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty" bson:"city"`
	// @inject_tag: bson:"subdivision"
	Subdivision string `protobuf:"bytes,5,opt,name=subdivision,proto3" json:"subdivision,omitempty" bson:"subdivision"`
	// @inject_tag: bson:"timezone"
	Timezone string `protobuf:"bytes,6,opt,name=timezone,proto3" json:"timezone,omitempty" bson:"timezone"`
	// @inject_tag: bson:"phone"
	Phone string `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone,omitempty" bson:"phone"`
	// @inject_tag: bson:"email"
	Email                string   `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty" bson:"email"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *PayerData) Reset()         { *m = PayerData{} }
func (m *PayerData) String() string { return proto.CompactTextString(m) }
func (*PayerData) ProtoMessage()    {}
func (*PayerData) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_349270f49f9a2286, []int{14}
}
func (m *PayerData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PayerData.Unmarshal(m, b)
}
func (m *PayerData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PayerData.Marshal(b, m, deterministic)
}
func (dst *PayerData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PayerData.Merge(dst, src)
}
func (m *PayerData) XXX_Size() int {
	return xxx_messageInfo_PayerData.Size(m)
}
func (m *PayerData) XXX_DiscardUnknown() {
	xxx_messageInfo_PayerData.DiscardUnknown(m)
}

var xxx_messageInfo_PayerData proto.InternalMessageInfo

func (m *PayerData) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *PayerData) GetCountryCodeA2() string {
	if m != nil {
		return m.CountryCodeA2
	}
	return ""
}

func (m *PayerData) GetCountryName() *Name {
	if m != nil {
		return m.CountryName
	}
	return nil
}

func (m *PayerData) GetCity() *Name {
	if m != nil {
		return m.City
	}
	return nil
}

func (m *PayerData) GetSubdivision() string {
	if m != nil {
		return m.Subdivision
	}
	return ""
}

func (m *PayerData) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func (m *PayerData) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *PayerData) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type OrderFee struct {
	// @inject_tag: bson:"amount_payment_method_currency"
	AmountPaymentMethodCurrency float64 `protobuf:"fixed64,1,opt,name=AmountPaymentMethodCurrency,proto3" json:"AmountPaymentMethodCurrency,omitempty" bson:"amount_payment_method_currency"`
	// @inject_tag: bson:"amount_merchant_currency"
	AmountMerchantCurrency float64  `protobuf:"fixed64,2,opt,name=AmountMerchantCurrency,proto3" json:"AmountMerchantCurrency,omitempty" bson:"amount_merchant_currency"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-" bson:"-"`
	XXX_unrecognized       []byte   `json:"-" bson:"-"`
	XXX_sizecache          int32    `json:"-" bson:"-"`
}

func (m *OrderFee) Reset()         { *m = OrderFee{} }
func (m *OrderFee) String() string { return proto.CompactTextString(m) }
func (*OrderFee) ProtoMessage()    {}
func (*OrderFee) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_349270f49f9a2286, []int{15}
}
func (m *OrderFee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderFee.Unmarshal(m, b)
}
func (m *OrderFee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderFee.Marshal(b, m, deterministic)
}
func (dst *OrderFee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderFee.Merge(dst, src)
}
func (m *OrderFee) XXX_Size() int {
	return xxx_messageInfo_OrderFee.Size(m)
}
func (m *OrderFee) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderFee.DiscardUnknown(m)
}

var xxx_messageInfo_OrderFee proto.InternalMessageInfo

func (m *OrderFee) GetAmountPaymentMethodCurrency() float64 {
	if m != nil {
		return m.AmountPaymentMethodCurrency
	}
	return 0
}

func (m *OrderFee) GetAmountMerchantCurrency() float64 {
	if m != nil {
		return m.AmountMerchantCurrency
	}
	return 0
}

type OrderFeePsp struct {
	// @inject_tag: bson:"amount_payment_method_currency"
	AmountPaymentMethodCurrency float64 `protobuf:"fixed64,1,opt,name=AmountPaymentMethodCurrency,proto3" json:"AmountPaymentMethodCurrency,omitempty" bson:"amount_payment_method_currency"`
	// @inject_tag: bson:"amount_merchant_currency"
	AmountMerchantCurrency float64 `protobuf:"fixed64,2,opt,name=AmountMerchantCurrency,proto3" json:"AmountMerchantCurrency,omitempty" bson:"amount_merchant_currency"`
	// @inject_tag: bson:"amount_psp_currency"
	AmountPspCurrency    float64  `protobuf:"fixed64,3,opt,name=AmountPspCurrency,proto3" json:"AmountPspCurrency,omitempty" bson:"amount_psp_currency"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *OrderFeePsp) Reset()         { *m = OrderFeePsp{} }
func (m *OrderFeePsp) String() string { return proto.CompactTextString(m) }
func (*OrderFeePsp) ProtoMessage()    {}
func (*OrderFeePsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_349270f49f9a2286, []int{16}
}
func (m *OrderFeePsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderFeePsp.Unmarshal(m, b)
}
func (m *OrderFeePsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderFeePsp.Marshal(b, m, deterministic)
}
func (dst *OrderFeePsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderFeePsp.Merge(dst, src)
}
func (m *OrderFeePsp) XXX_Size() int {
	return xxx_messageInfo_OrderFeePsp.Size(m)
}
func (m *OrderFeePsp) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderFeePsp.DiscardUnknown(m)
}

var xxx_messageInfo_OrderFeePsp proto.InternalMessageInfo

func (m *OrderFeePsp) GetAmountPaymentMethodCurrency() float64 {
	if m != nil {
		return m.AmountPaymentMethodCurrency
	}
	return 0
}

func (m *OrderFeePsp) GetAmountMerchantCurrency() float64 {
	if m != nil {
		return m.AmountMerchantCurrency
	}
	return 0
}

func (m *OrderFeePsp) GetAmountPspCurrency() float64 {
	if m != nil {
		return m.AmountPspCurrency
	}
	return 0
}

// Contain information about payment system commission in other currencies
type OrderFeePaymentSystem struct {
	// @inject_tag: bson:"amount_payment_method_currency"
	AmountPaymentMethodCurrency float64 `protobuf:"fixed64,1,opt,name=AmountPaymentMethodCurrency,proto3" json:"AmountPaymentMethodCurrency,omitempty" bson:"amount_payment_method_currency"`
	// @inject_tag: bson:"amount_merchant_currency"
	AmountMerchantCurrency float64 `protobuf:"fixed64,2,opt,name=AmountMerchantCurrency,proto3" json:"AmountMerchantCurrency,omitempty" bson:"amount_merchant_currency"`
	// @inject_tag: bson:"amount_payment_system_currency"
	AmountPaymentSystemCurrency float64  `protobuf:"fixed64,3,opt,name=AmountPaymentSystemCurrency,proto3" json:"AmountPaymentSystemCurrency,omitempty" bson:"amount_payment_system_currency"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-" bson:"-"`
	XXX_unrecognized            []byte   `json:"-" bson:"-"`
	XXX_sizecache               int32    `json:"-" bson:"-"`
}

func (m *OrderFeePaymentSystem) Reset()         { *m = OrderFeePaymentSystem{} }
func (m *OrderFeePaymentSystem) String() string { return proto.CompactTextString(m) }
func (*OrderFeePaymentSystem) ProtoMessage()    {}
func (*OrderFeePaymentSystem) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_349270f49f9a2286, []int{17}
}
func (m *OrderFeePaymentSystem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderFeePaymentSystem.Unmarshal(m, b)
}
func (m *OrderFeePaymentSystem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderFeePaymentSystem.Marshal(b, m, deterministic)
}
func (dst *OrderFeePaymentSystem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderFeePaymentSystem.Merge(dst, src)
}
func (m *OrderFeePaymentSystem) XXX_Size() int {
	return xxx_messageInfo_OrderFeePaymentSystem.Size(m)
}
func (m *OrderFeePaymentSystem) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderFeePaymentSystem.DiscardUnknown(m)
}

var xxx_messageInfo_OrderFeePaymentSystem proto.InternalMessageInfo

func (m *OrderFeePaymentSystem) GetAmountPaymentMethodCurrency() float64 {
	if m != nil {
		return m.AmountPaymentMethodCurrency
	}
	return 0
}

func (m *OrderFeePaymentSystem) GetAmountMerchantCurrency() float64 {
	if m != nil {
		return m.AmountMerchantCurrency
	}
	return 0
}

func (m *OrderFeePaymentSystem) GetAmountPaymentSystemCurrency() float64 {
	if m != nil {
		return m.AmountPaymentSystemCurrency
	}
	return 0
}

type Order struct {
	// @inject_tag: bson:"_id,bsonobjectid"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id,bsonobjectid"`
	// @inject_tag: bson:"project"
	Project *ProjectOrder `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty" bson:"project"`
	// @inject_tag: bson:"project_order_id"
	ProjectOrderId string `protobuf:"bytes,3,opt,name=project_order_id,json=projectOrderId,proto3" json:"project_order_id,omitempty" bson:"project_order_id"`
	// @inject_tag: bson:"project_account"
	ProjectAccount string `protobuf:"bytes,4,opt,name=project_account,json=projectAccount,proto3" json:"project_account,omitempty" bson:"project_account"`
	// @inject_tag: bson:"description"
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty" bson:"description"`
	// @inject_tag: bson:"project_income_amount"
	ProjectIncomeAmount float64 `protobuf:"fixed64,6,opt,name=project_income_amount,json=projectIncomeAmount,proto3" json:"project_income_amount,omitempty" bson:"project_income_amount"`
	// @inject_tag: bson:"project_income_currency"
	ProjectIncomeCurrency *Currency `protobuf:"bytes,7,opt,name=project_income_currency,json=projectIncomeCurrency,proto3" json:"project_income_currency,omitempty" bson:"project_income_currency"`
	// @inject_tag: bson:"project_outcome_amount"
	ProjectOutcomeAmount float64 `protobuf:"fixed64,8,opt,name=project_outcome_amount,json=projectOutcomeAmount,proto3" json:"project_outcome_amount,omitempty" bson:"project_outcome_amount"`
	// @inject_tag: bson:"project_outcome_currency"
	ProjectOutcomeCurrency *Currency `protobuf:"bytes,9,opt,name=project_outcome_currency,json=projectOutcomeCurrency,proto3" json:"project_outcome_currency,omitempty" bson:"project_outcome_currency"`
	// @inject_tag: bson:"project_last_requested_at,timestamp"
	ProjectLastRequestedAt *timestamp.Timestamp `protobuf:"bytes,10,opt,name=project_last_requested_at,json=projectLastRequestedAt,proto3" json:"project_last_requested_at,omitempty" bson:"project_last_requested_at,timestamp"`
	// @inject_tag: bson:"project_params"
	ProjectParams map[string]string `protobuf:"bytes,11,rep,name=project_params,json=projectParams,proto3" json:"project_params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"project_params"`
	// @inject_tag: bson:"payer_data"
	PayerData *PayerData `protobuf:"bytes,12,opt,name=payer_data,json=payerData,proto3" json:"payer_data,omitempty" bson:"payer_data"`
	// @inject_tag: bson:"payment_method"
	PaymentMethod *PaymentMethodOrder `protobuf:"bytes,13,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty" bson:"payment_method"`
	// @inject_tag: bson:"pm_terminal_id"
	PaymentMethodTerminalId string `protobuf:"bytes,14,opt,name=payment_method_terminal_id,json=paymentMethodTerminalId,proto3" json:"payment_method_terminal_id,omitempty" bson:"pm_terminal_id"`
	// @inject_tag: bson:"pm_order_id"
	PaymentMethodOrderId string `protobuf:"bytes,15,opt,name=payment_method_order_id,json=paymentMethodOrderId,proto3" json:"payment_method_order_id,omitempty" bson:"pm_order_id"`
	// @inject_tag: bson:"pm_outcome_amount"
	PaymentMethodOutcomeAmount float64 `protobuf:"fixed64,16,opt,name=payment_method_outcome_amount,json=paymentMethodOutcomeAmount,proto3" json:"payment_method_outcome_amount,omitempty" bson:"pm_outcome_amount"`
	// @inject_tag: bson:"pm_outcome_currency"
	PaymentMethodOutcomeCurrency *Currency `protobuf:"bytes,17,opt,name=payment_method_outcome_currency,json=paymentMethodOutcomeCurrency,proto3" json:"payment_method_outcome_currency,omitempty" bson:"pm_outcome_currency"`
	// @inject_tag: bson:"pm_income_amount"
	PaymentMethodIncomeAmount float64 `protobuf:"fixed64,18,opt,name=payment_method_income_amount,json=paymentMethodIncomeAmount,proto3" json:"payment_method_income_amount,omitempty" bson:"pm_income_amount"`
	// @inject_tag: bson:"pm_income_currency"
	PaymentMethodIncomeCurrency *Currency `protobuf:"bytes,19,opt,name=payment_method_income_currency,json=paymentMethodIncomeCurrency,proto3" json:"payment_method_income_currency,omitempty" bson:"pm_income_currency"`
	// @inject_tag: bson:"-" json:"-"
	PaymentMethodIncomeCurrencyA3 string `protobuf:"bytes,20,opt,name=payment_method_income_currency_a3,json=paymentMethodIncomeCurrencyA3,proto3" json:"-" bson:"-"`
	// @inject_tag: bson:"pm_order_close_date,timestamp"
	PaymentMethodOrderClosedAt *timestamp.Timestamp `protobuf:"bytes,21,opt,name=payment_method_order_closed_at,json=paymentMethodOrderClosedAt,proto3" json:"payment_method_order_closed_at,omitempty" bson:"pm_order_close_date,timestamp"`
	// @inject_tag: bson:"status"
	Status int32 `protobuf:"varint,22,opt,name=status,proto3" json:"status,omitempty" bson:"status"`
	// @inject_tag: bson:"created_at,timestamp"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,23,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at,timestamp"`
	// @inject_tag: bson:"updated_at,timestamp"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,24,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" bson:"updated_at,timestamp"`
	// @inject_tag: bson:"created_by_json"
	IsJsonRequest bool `protobuf:"varint,25,opt,name=is_json_request,json=isJsonRequest,proto3" json:"is_json_request,omitempty" bson:"created_by_json"`
	// @inject_tag: bson:"amount_psp_ac"
	AmountInPspAccountingCurrency float64 `protobuf:"fixed64,26,opt,name=amount_in_psp_accounting_currency,json=amountInPspAccountingCurrency,proto3" json:"amount_in_psp_accounting_currency,omitempty" bson:"amount_psp_ac"`
	// @inject_tag: bson:"amount_in_merchant_ac"
	AmountInMerchantAccountingCurrency float64 `protobuf:"fixed64,27,opt,name=amount_in_merchant_accounting_currency,json=amountInMerchantAccountingCurrency,proto3" json:"amount_in_merchant_accounting_currency,omitempty" bson:"amount_in_merchant_ac"`
	// @inject_tag: bson:"amount_out_merchant_ac"
	AmountOutMerchantAccountingCurrency float64 `protobuf:"fixed64,28,opt,name=amount_out_merchant_accounting_currency,json=amountOutMerchantAccountingCurrency,proto3" json:"amount_out_merchant_accounting_currency,omitempty" bson:"amount_out_merchant_ac"`
	// @inject_tag: bson:"amount_ps_ac"
	AmountInPaymentSystemAccountingCurrency float64 `protobuf:"fixed64,29,opt,name=amount_in_payment_system_accounting_currency,json=amountInPaymentSystemAccountingCurrency,proto3" json:"amount_in_payment_system_accounting_currency,omitempty" bson:"amount_ps_ac"`
	// @inject_tag: bson:"pm_account"
	PaymentMethodPayerAccount string `protobuf:"bytes,30,opt,name=payment_method_payer_account,json=paymentMethodPayerAccount,proto3" json:"payment_method_payer_account,omitempty" bson:"pm_account"`
	// @inject_tag: bson:"pm_txn_params"
	PaymentMethodTxnParams map[string]string `protobuf:"bytes,31,rep,name=payment_method_txn_params,json=paymentMethodTxnParams,proto3" json:"payment_method_txn_params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"pm_txn_params"`
	// @inject_tag: bson:"fixed_package"
	FixedPackage *FixedPackage `protobuf:"bytes,32,opt,name=fixed_package,json=fixedPackage,proto3" json:"fixed_package,omitempty" bson:"fixed_package"`
	// @inject_tag: bson:"payment_requisites" json:"-"
	PaymentRequisites map[string]string `protobuf:"bytes,33,rep,name=payment_requisites,json=paymentRequisites,proto3" json:"-" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"payment_requisites"`
	// @inject_tag: bson:"psp_fee_amount"
	PspFeeAmount *OrderFeePsp `protobuf:"bytes,34,opt,name=psp_fee_amount,json=pspFeeAmount,proto3" json:"psp_fee_amount,omitempty" bson:"psp_fee_amount"`
	// @inject_tag: bson:"project_fee_amount"
	ProjectFeeAmount *OrderFee `protobuf:"bytes,35,opt,name=project_fee_amount,json=projectFeeAmount,proto3" json:"project_fee_amount,omitempty" bson:"project_fee_amount"`
	// @inject_tag: bson:"to_payer_fee_amount"
	ToPayerFeeAmount *OrderFee `protobuf:"bytes,36,opt,name=to_payer_fee_amount,json=toPayerFeeAmount,proto3" json:"to_payer_fee_amount,omitempty" bson:"to_payer_fee_amount"`
	// @inject_tag: bson:"vat_amount"
	VatAmount float64 `protobuf:"fixed64,37,opt,name=vat_amount,json=vatAmount,proto3" json:"vat_amount,omitempty" bson:"vat_amount"`
	// @inject_tag: bson:"ps_fee_amount"
	PaymentSystemFeeAmount *OrderFeePaymentSystem `protobuf:"bytes,38,opt,name=payment_system_fee_amount,json=paymentSystemFeeAmount,proto3" json:"payment_system_fee_amount,omitempty" bson:"ps_fee_amount"`
	XXX_NoUnkeyedLiteral   struct{}               `json:"-" bson:"-"`
	XXX_unrecognized       []byte                 `json:"-" bson:"-"`
	XXX_sizecache          int32                  `json:"-" bson:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_349270f49f9a2286, []int{18}
}
func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (dst *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(dst, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Order) GetProject() *ProjectOrder {
	if m != nil {
		return m.Project
	}
	return nil
}

func (m *Order) GetProjectOrderId() string {
	if m != nil {
		return m.ProjectOrderId
	}
	return ""
}

func (m *Order) GetProjectAccount() string {
	if m != nil {
		return m.ProjectAccount
	}
	return ""
}

func (m *Order) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Order) GetProjectIncomeAmount() float64 {
	if m != nil {
		return m.ProjectIncomeAmount
	}
	return 0
}

func (m *Order) GetProjectIncomeCurrency() *Currency {
	if m != nil {
		return m.ProjectIncomeCurrency
	}
	return nil
}

func (m *Order) GetProjectOutcomeAmount() float64 {
	if m != nil {
		return m.ProjectOutcomeAmount
	}
	return 0
}

func (m *Order) GetProjectOutcomeCurrency() *Currency {
	if m != nil {
		return m.ProjectOutcomeCurrency
	}
	return nil
}

func (m *Order) GetProjectLastRequestedAt() *timestamp.Timestamp {
	if m != nil {
		return m.ProjectLastRequestedAt
	}
	return nil
}

func (m *Order) GetProjectParams() map[string]string {
	if m != nil {
		return m.ProjectParams
	}
	return nil
}

func (m *Order) GetPayerData() *PayerData {
	if m != nil {
		return m.PayerData
	}
	return nil
}

func (m *Order) GetPaymentMethod() *PaymentMethodOrder {
	if m != nil {
		return m.PaymentMethod
	}
	return nil
}

func (m *Order) GetPaymentMethodTerminalId() string {
	if m != nil {
		return m.PaymentMethodTerminalId
	}
	return ""
}

func (m *Order) GetPaymentMethodOrderId() string {
	if m != nil {
		return m.PaymentMethodOrderId
	}
	return ""
}

func (m *Order) GetPaymentMethodOutcomeAmount() float64 {
	if m != nil {
		return m.PaymentMethodOutcomeAmount
	}
	return 0
}

func (m *Order) GetPaymentMethodOutcomeCurrency() *Currency {
	if m != nil {
		return m.PaymentMethodOutcomeCurrency
	}
	return nil
}

func (m *Order) GetPaymentMethodIncomeAmount() float64 {
	if m != nil {
		return m.PaymentMethodIncomeAmount
	}
	return 0
}

func (m *Order) GetPaymentMethodIncomeCurrency() *Currency {
	if m != nil {
		return m.PaymentMethodIncomeCurrency
	}
	return nil
}

func (m *Order) GetPaymentMethodIncomeCurrencyA3() string {
	if m != nil {
		return m.PaymentMethodIncomeCurrencyA3
	}
	return ""
}

func (m *Order) GetPaymentMethodOrderClosedAt() *timestamp.Timestamp {
	if m != nil {
		return m.PaymentMethodOrderClosedAt
	}
	return nil
}

func (m *Order) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Order) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Order) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Order) GetIsJsonRequest() bool {
	if m != nil {
		return m.IsJsonRequest
	}
	return false
}

func (m *Order) GetAmountInPspAccountingCurrency() float64 {
	if m != nil {
		return m.AmountInPspAccountingCurrency
	}
	return 0
}

func (m *Order) GetAmountInMerchantAccountingCurrency() float64 {
	if m != nil {
		return m.AmountInMerchantAccountingCurrency
	}
	return 0
}

func (m *Order) GetAmountOutMerchantAccountingCurrency() float64 {
	if m != nil {
		return m.AmountOutMerchantAccountingCurrency
	}
	return 0
}

func (m *Order) GetAmountInPaymentSystemAccountingCurrency() float64 {
	if m != nil {
		return m.AmountInPaymentSystemAccountingCurrency
	}
	return 0
}

func (m *Order) GetPaymentMethodPayerAccount() string {
	if m != nil {
		return m.PaymentMethodPayerAccount
	}
	return ""
}

func (m *Order) GetPaymentMethodTxnParams() map[string]string {
	if m != nil {
		return m.PaymentMethodTxnParams
	}
	return nil
}

func (m *Order) GetFixedPackage() *FixedPackage {
	if m != nil {
		return m.FixedPackage
	}
	return nil
}

func (m *Order) GetPaymentRequisites() map[string]string {
	if m != nil {
		return m.PaymentRequisites
	}
	return nil
}

func (m *Order) GetPspFeeAmount() *OrderFeePsp {
	if m != nil {
		return m.PspFeeAmount
	}
	return nil
}

func (m *Order) GetProjectFeeAmount() *OrderFee {
	if m != nil {
		return m.ProjectFeeAmount
	}
	return nil
}

func (m *Order) GetToPayerFeeAmount() *OrderFee {
	if m != nil {
		return m.ToPayerFeeAmount
	}
	return nil
}

func (m *Order) GetVatAmount() float64 {
	if m != nil {
		return m.VatAmount
	}
	return 0
}

func (m *Order) GetPaymentSystemFeeAmount() *OrderFeePaymentSystem {
	if m != nil {
		return m.PaymentSystemFeeAmount
	}
	return nil
}

type CurrencyRate struct {
	// @inject_tag: bson:"_id"
	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id"`
	// @inject_tag: bson:"currency_from"
	CurrencyFrom int32 `protobuf:"varint,2,opt,name=currency_from,json=currencyFrom,proto3" json:"currency_from,omitempty" bson:"currency_from"`
	// @inject_tag: bson:"currency_to"
	CurrencyTo int32 `protobuf:"varint,3,opt,name=currency_to,json=currencyTo,proto3" json:"currency_to,omitempty" bson:"currency_to"`
	// @inject_tag: bson:"rate"
	Rate float64 `protobuf:"fixed64,4,opt,name=rate,proto3" json:"rate,omitempty" bson:"rate"`
	// @inject_tag: bson:"date"
	Date *timestamp.Timestamp `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty" bson:"date"`
	// @inject_tag: bson:"created_at"
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *CurrencyRate) Reset()         { *m = CurrencyRate{} }
func (m *CurrencyRate) String() string { return proto.CompactTextString(m) }
func (*CurrencyRate) ProtoMessage()    {}
func (*CurrencyRate) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_349270f49f9a2286, []int{19}
}
func (m *CurrencyRate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurrencyRate.Unmarshal(m, b)
}
func (m *CurrencyRate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurrencyRate.Marshal(b, m, deterministic)
}
func (dst *CurrencyRate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrencyRate.Merge(dst, src)
}
func (m *CurrencyRate) XXX_Size() int {
	return xxx_messageInfo_CurrencyRate.Size(m)
}
func (m *CurrencyRate) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrencyRate.DiscardUnknown(m)
}

var xxx_messageInfo_CurrencyRate proto.InternalMessageInfo

func (m *CurrencyRate) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CurrencyRate) GetCurrencyFrom() int32 {
	if m != nil {
		return m.CurrencyFrom
	}
	return 0
}

func (m *CurrencyRate) GetCurrencyTo() int32 {
	if m != nil {
		return m.CurrencyTo
	}
	return 0
}

func (m *CurrencyRate) GetRate() float64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *CurrencyRate) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *CurrencyRate) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type Commission struct {
	// @inject_tag: bson:"_id,bsonobjectid"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id,bsonobjectid"`
	// @inject_tag: bson:"pm_id,bsonobjectid"
	PaymentMethodId string `protobuf:"bytes,2,opt,name=payment_method_id,json=paymentMethodId,proto3" json:"payment_method_id,omitempty" bson:"pm_id,bsonobjectid"`
	// @inject_tag: bson:"project_id,bsonobjectid"
	ProjectId string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" bson:"project_id,bsonobjectid"`
	// @inject_tag: bson:"pm_commission"
	PaymentMethodCommission float64 `protobuf:"fixed64,4,opt,name=payment_method_commission,json=paymentMethodCommission,proto3" json:"payment_method_commission,omitempty" bson:"pm_commission"`
	// @inject_tag: bson:"psp_commission"
	PspCommission float64 `protobuf:"fixed64,5,opt,name=psp_commission,json=pspCommission,proto3" json:"psp_commission,omitempty" bson:"psp_commission"`
	// @inject_tag: bson:"total_commission_to_user"
	TotalCommissionToUser float64 `protobuf:"fixed64,6,opt,name=total_commission_to_user,json=totalCommissionToUser,proto3" json:"total_commission_to_user,omitempty" bson:"total_commission_to_user"`
	// @inject_tag: bson:"start_date"
	StartDate *timestamp.Timestamp `protobuf:"bytes,7,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty" bson:"start_date"`
	// @inject_tag: bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at"`
	// @inject_tag: bson:"updated_at"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" bson:"updated_at"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *Commission) Reset()         { *m = Commission{} }
func (m *Commission) String() string { return proto.CompactTextString(m) }
func (*Commission) ProtoMessage()    {}
func (*Commission) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_349270f49f9a2286, []int{20}
}
func (m *Commission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Commission.Unmarshal(m, b)
}
func (m *Commission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Commission.Marshal(b, m, deterministic)
}
func (dst *Commission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Commission.Merge(dst, src)
}
func (m *Commission) XXX_Size() int {
	return xxx_messageInfo_Commission.Size(m)
}
func (m *Commission) XXX_DiscardUnknown() {
	xxx_messageInfo_Commission.DiscardUnknown(m)
}

var xxx_messageInfo_Commission proto.InternalMessageInfo

func (m *Commission) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Commission) GetPaymentMethodId() string {
	if m != nil {
		return m.PaymentMethodId
	}
	return ""
}

func (m *Commission) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *Commission) GetPaymentMethodCommission() float64 {
	if m != nil {
		return m.PaymentMethodCommission
	}
	return 0
}

func (m *Commission) GetPspCommission() float64 {
	if m != nil {
		return m.PspCommission
	}
	return 0
}

func (m *Commission) GetTotalCommissionToUser() float64 {
	if m != nil {
		return m.TotalCommissionToUser
	}
	return 0
}

func (m *Commission) GetStartDate() *timestamp.Timestamp {
	if m != nil {
		return m.StartDate
	}
	return nil
}

func (m *Commission) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Commission) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type Vat struct {
	// @inject_tag: bson:"_id,bsonobjectid"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id,bsonobjectid"`
	// @inject_tag: bson:"country"
	Country *Country `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty" bson:"country"`
	// @inject_tag: bson:"subdivision_code"
	SubdivisionCode string `protobuf:"bytes,3,opt,name=subdivision_code,json=subdivisionCode,proto3" json:"subdivision_code,omitempty" bson:"subdivision_code"`
	// @inject_tag: bson:"vat"
	Vat float64 `protobuf:"fixed64,4,opt,name=vat,proto3" json:"vat,omitempty" bson:"vat"`
	// @inject_tag: bson:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at"`
	// @inject_tag: bson:"updated_at"
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" bson:"updated_at"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-"`
}

func (m *Vat) Reset()         { *m = Vat{} }
func (m *Vat) String() string { return proto.CompactTextString(m) }
func (*Vat) ProtoMessage()    {}
func (*Vat) Descriptor() ([]byte, []int) {
	return fileDescriptor_billing_349270f49f9a2286, []int{21}
}
func (m *Vat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vat.Unmarshal(m, b)
}
func (m *Vat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vat.Marshal(b, m, deterministic)
}
func (dst *Vat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vat.Merge(dst, src)
}
func (m *Vat) XXX_Size() int {
	return xxx_messageInfo_Vat.Size(m)
}
func (m *Vat) XXX_DiscardUnknown() {
	xxx_messageInfo_Vat.DiscardUnknown(m)
}

var xxx_messageInfo_Vat proto.InternalMessageInfo

func (m *Vat) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Vat) GetCountry() *Country {
	if m != nil {
		return m.Country
	}
	return nil
}

func (m *Vat) GetSubdivisionCode() string {
	if m != nil {
		return m.SubdivisionCode
	}
	return ""
}

func (m *Vat) GetVat() float64 {
	if m != nil {
		return m.Vat
	}
	return 0
}

func (m *Vat) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Vat) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func init() {
	proto.RegisterType((*Name)(nil), "billing.Name")
	proto.RegisterType((*Country)(nil), "billing.Country")
	proto.RegisterType((*Currency)(nil), "billing.Currency")
	proto.RegisterType((*Merchant)(nil), "billing.Merchant")
	proto.RegisterType((*FixedPackage)(nil), "billing.FixedPackage")
	proto.RegisterType((*FixedPackages)(nil), "billing.FixedPackages")
	proto.RegisterType((*ProjectPaymentMethod)(nil), "billing.ProjectPaymentMethod")
	proto.RegisterType((*ProjectPaymentMethods)(nil), "billing.ProjectPaymentMethods")
	proto.RegisterType((*Project)(nil), "billing.Project")
	proto.RegisterMapType((map[string]*FixedPackages)(nil), "billing.Project.FixedPackageEntry")
	proto.RegisterMapType((map[string]*ProjectPaymentMethods)(nil), "billing.Project.PaymentMethodsEntry")
	proto.RegisterType((*ProjectOrder)(nil), "billing.ProjectOrder")
	proto.RegisterType((*PaymentSystem)(nil), "billing.PaymentSystem")
	proto.RegisterType((*PaymentMethodParams)(nil), "billing.PaymentMethodParams")
	proto.RegisterMapType((map[string]string)(nil), "billing.PaymentMethodParams.OtherEntry")
	proto.RegisterType((*PaymentMethod)(nil), "billing.PaymentMethod")
	proto.RegisterType((*PaymentMethodOrder)(nil), "billing.PaymentMethodOrder")
	proto.RegisterType((*PayerData)(nil), "billing.PayerData")
	proto.RegisterType((*OrderFee)(nil), "billing.OrderFee")
	proto.RegisterType((*OrderFeePsp)(nil), "billing.OrderFeePsp")
	proto.RegisterType((*OrderFeePaymentSystem)(nil), "billing.OrderFeePaymentSystem")
	proto.RegisterType((*Order)(nil), "billing.Order")
	proto.RegisterMapType((map[string]string)(nil), "billing.Order.PaymentMethodTxnParamsEntry")
	proto.RegisterMapType((map[string]string)(nil), "billing.Order.PaymentRequisitesEntry")
	proto.RegisterMapType((map[string]string)(nil), "billing.Order.ProjectParamsEntry")
	proto.RegisterType((*CurrencyRate)(nil), "billing.CurrencyRate")
	proto.RegisterType((*Commission)(nil), "billing.Commission")
	proto.RegisterType((*Vat)(nil), "billing.Vat")
}

func init() { proto.RegisterFile("billing/billing.proto", fileDescriptor_billing_349270f49f9a2286) }

var fileDescriptor_billing_349270f49f9a2286 = []byte{
	// 2653 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x5a, 0x4b, 0x73, 0x1b, 0xc7,
	0xf1, 0x2f, 0x10, 0x00, 0x01, 0x34, 0x00, 0x82, 0x1c, 0x3e, 0xb4, 0x04, 0x45, 0x89, 0x82, 0xac,
	0xc7, 0x5f, 0x96, 0x49, 0xff, 0x29, 0x3b, 0x71, 0x94, 0xd8, 0x16, 0x44, 0x49, 0x31, 0xe2, 0x58,
	0x62, 0xad, 0x65, 0xe7, 0x51, 0xe5, 0x6c, 0x0d, 0x77, 0x87, 0xe4, 0x58, 0x8b, 0xdd, 0xcd, 0xce,
	0x80, 0x21, 0x72, 0x4c, 0xe5, 0x98, 0x73, 0x4e, 0xf9, 0x02, 0x39, 0xe4, 0x96, 0x7c, 0x8d, 0x5c,
	0xf2, 0x0d, 0xe2, 0xca, 0x37, 0xc8, 0x29, 0xa7, 0xd4, 0xbc, 0x16, 0xbb, 0xc0, 0x02, 0x24, 0x98,
	0x83, 0x93, 0x13, 0x31, 0x33, 0xdd, 0x3d, 0x3d, 0xfd, 0xf8, 0x75, 0xcf, 0x2c, 0x61, 0xfd, 0x88,
	0xfa, 0x3e, 0x0d, 0x4e, 0xf6, 0xf4, 0xdf, 0xdd, 0x28, 0x0e, 0x79, 0x88, 0x2a, 0x7a, 0xd8, 0xbe,
	0x79, 0x12, 0x86, 0x27, 0x3e, 0xd9, 0x93, 0xd3, 0x47, 0x83, 0xe3, 0x3d, 0x4e, 0xfb, 0x84, 0x71,
	0xdc, 0x8f, 0x14, 0x65, 0xe7, 0x2e, 0x94, 0x5e, 0xe2, 0x3e, 0x41, 0x4b, 0xb0, 0x40, 0x02, 0xab,
	0xb0, 0x53, 0xb8, 0x5f, 0xb3, 0x17, 0x48, 0x20, 0xc6, 0xf1, 0xc0, 0x5a, 0x50, 0xe3, 0x78, 0xd0,
	0xf9, 0xdd, 0x02, 0x54, 0x0e, 0xc2, 0x41, 0xc0, 0xe3, 0x21, 0xda, 0x84, 0xaa, 0x1b, 0x7a, 0xc4,
	0xa1, 0x01, 0x97, 0x1c, 0x65, 0xbb, 0x22, 0xc6, 0xbd, 0x80, 0xa3, 0x6b, 0x20, 0x7f, 0x3a, 0x78,
	0x5f, 0xf3, 0x2e, 0x8a, 0x61, 0x77, 0x7f, 0xb4, 0xf0, 0xc8, 0x2a, 0xa6, 0x16, 0x1e, 0xa1, 0x5b,
	0x50, 0x0a, 0x70, 0x9f, 0x58, 0xa5, 0x9d, 0xc2, 0xfd, 0xfa, 0x7e, 0x73, 0xd7, 0x1c, 0x44, 0x68,
	0x65, 0xcb, 0x25, 0xb4, 0x05, 0x35, 0xca, 0x1c, 0xec, 0x72, 0x7a, 0x46, 0xac, 0xf2, 0x4e, 0xe1,
	0x7e, 0xd5, 0xae, 0x52, 0xd6, 0x95, 0x63, 0xf4, 0x3d, 0x00, 0x37, 0x26, 0x98, 0x13, 0xcf, 0xc1,
	0xdc, 0x5a, 0x94, 0x52, 0xda, 0xbb, 0xea, 0xd8, 0xbb, 0xe6, 0xd8, 0xbb, 0xaf, 0xcd, 0xb1, 0xed,
	0x9a, 0xa6, 0xee, 0x72, 0xc1, 0x3a, 0x88, 0x3c, 0xc3, 0x5a, 0xb9, 0x98, 0x55, 0x53, 0x77, 0x79,
	0xe7, 0x9f, 0x05, 0xa8, 0x1e, 0x0c, 0xe2, 0x98, 0x04, 0xee, 0xe5, 0xec, 0xf1, 0x28, 0x63, 0x8f,
	0xff, 0xd5, 0x63, 0xff, 0xb1, 0x04, 0xd5, 0xcf, 0x48, 0xec, 0x9e, 0xe2, 0x80, 0x8b, 0x10, 0xa1,
	0x9e, 0x09, 0x19, 0xea, 0xa1, 0x9b, 0x50, 0x27, 0xe7, 0x9c, 0xc4, 0x01, 0xf6, 0x1d, 0xea, 0xe9,
	0xf3, 0x82, 0x99, 0xea, 0x79, 0x68, 0x0d, 0xca, 0xa4, 0x8f, 0xa9, 0xaf, 0x23, 0x40, 0x0d, 0x10,
	0x4a, 0x59, 0xa2, 0xa6, 0x8f, 0xfe, 0x40, 0x98, 0x4d, 0x06, 0x9b, 0x3c, 0x78, 0x7d, 0x7f, 0x39,
	0x31, 0x90, 0x0e, 0x42, 0xdb, 0x10, 0xa0, 0xb7, 0x61, 0x05, 0xbb, 0x72, 0x40, 0x83, 0x13, 0x27,
	0x22, 0x31, 0x0d, 0x3d, 0x69, 0x90, 0x9a, 0xbd, 0x3c, 0x5a, 0x38, 0x94, 0xf3, 0xe8, 0x1d, 0xa8,
	0xba, 0xda, 0x6d, 0xfa, 0xe4, 0x2b, 0x23, 0xc9, 0x7a, 0xc1, 0x4e, 0x48, 0xd0, 0x5b, 0xb0, 0x44,
	0x99, 0x73, 0x86, 0xb9, 0x43, 0x02, 0x7c, 0xe4, 0x13, 0xcf, 0xaa, 0x4a, 0x3f, 0x34, 0x28, 0xfb,
	0x12, 0xf3, 0xe7, 0x6a, 0x0e, 0x3d, 0x81, 0x6d, 0xca, 0x1c, 0x37, 0xec, 0xf7, 0x29, 0x63, 0x34,
	0x0c, 0x1c, 0x1e, 0x3a, 0x03, 0x46, 0xe2, 0x84, 0xa9, 0x26, 0x99, 0x36, 0x29, 0x3b, 0x48, 0x68,
	0x5e, 0x87, 0x5f, 0x30, 0x12, 0x1b, 0x09, 0x1b, 0xb0, 0xc8, 0x38, 0xe6, 0x03, 0x66, 0x81, 0x8c,
	0x1f, 0x3d, 0x1a, 0xf3, 0x72, 0xfd, 0xea, 0x5e, 0x6e, 0xcc, 0xe1, 0x65, 0xf4, 0x0c, 0x96, 0x8f,
	0x69, 0xcc, 0xb8, 0x13, 0xe1, 0x61, 0x9f, 0x04, 0x5c, 0x08, 0x68, 0x5e, 0x28, 0x60, 0x49, 0xf2,
	0x1c, 0x2a, 0x96, 0x2e, 0xef, 0xfc, 0x69, 0x01, 0x1a, 0x2f, 0xe8, 0x39, 0xf1, 0x0e, 0xb1, 0xfb,
	0x06, 0x9f, 0x90, 0x89, 0x78, 0x31, 0x8e, 0x5f, 0x48, 0x39, 0xfe, 0x16, 0x34, 0x8c, 0xf1, 0x65,
	0x3a, 0x15, 0xa5, 0x39, 0xea, 0x66, 0x4e, 0xa4, 0xd4, 0x1a, 0x94, 0xa3, 0x98, 0xba, 0x2a, 0x60,
	0x0a, 0xb6, 0x1a, 0xfc, 0x17, 0x26, 0x4b, 0x26, 0xd6, 0xaa, 0x17, 0xc6, 0x5a, 0xe7, 0x53, 0x68,
	0xa6, 0xcd, 0xc5, 0xd0, 0x63, 0x68, 0x1e, 0x8b, 0x09, 0x27, 0x52, 0x33, 0x56, 0x61, 0xa7, 0x78,
	0xbf, 0xbe, 0xbf, 0x9e, 0x08, 0x49, 0x93, 0xdb, 0x8d, 0xe3, 0xd4, 0xa8, 0xf3, 0x15, 0xac, 0x1d,
	0xc6, 0xe1, 0xd7, 0xc4, 0x35, 0x0e, 0xf9, 0x8c, 0xf0, 0xd3, 0xd0, 0x9b, 0xf0, 0xc1, 0xfb, 0x50,
	0xc5, 0x9e, 0xa7, 0x0e, 0xb7, 0x70, 0xe1, 0xe1, 0x2a, 0x92, 0xb6, 0xcb, 0x3b, 0x0e, 0xac, 0xe7,
	0x89, 0x67, 0xe8, 0x05, 0xb4, 0x4c, 0xd0, 0xf4, 0xd5, 0x94, 0xd6, 0x7a, 0x3b, 0xd1, 0x3a, 0x8f,
	0xd1, 0x5e, 0x8a, 0x32, 0x72, 0x3a, 0x7f, 0x07, 0xa8, 0x68, 0xc2, 0x09, 0x9d, 0x3f, 0x82, 0x15,
	0x17, 0xfb, 0xfe, 0x11, 0x76, 0xdf, 0x38, 0x89, 0x81, 0x17, 0xa6, 0x19, 0x78, 0xd9, 0xd0, 0x26,
	0x70, 0xfd, 0x76, 0x8a, 0x5f, 0x1e, 0xd2, 0x0d, 0x0d, 0x24, 0x25, 0xc4, 0x87, 0x7a, 0x1e, 0x7d,
	0x08, 0x5b, 0x2a, 0x18, 0x1c, 0x1a, 0x9c, 0x85, 0xd4, 0x25, 0x0e, 0xf6, 0xfd, 0xf0, 0x57, 0xc4,
	0x73, 0x06, 0xb1, 0xcf, 0xac, 0xd2, 0x4e, 0xf1, 0x7e, 0xcd, 0xb6, 0x14, 0x49, 0x4f, 0x51, 0x74,
	0x15, 0xc1, 0x17, 0xb1, 0xcf, 0x44, 0x0c, 0xf4, 0x35, 0x5e, 0x6a, 0x24, 0x1b, 0xa9, 0x68, 0x80,
	0xd4, 0x4e, 0x48, 0xd0, 0x47, 0x70, 0x5d, 0x44, 0xb1, 0x10, 0xe0, 0x78, 0xc3, 0x00, 0xf7, 0xa9,
	0xeb, 0x04, 0x21, 0xa7, 0xc7, 0x43, 0xb5, 0xdd, 0xa2, 0x0c, 0x6c, 0x8b, 0x32, 0xb9, 0xc7, 0x33,
	0x45, 0xf1, 0x52, 0x12, 0xc8, 0xed, 0x9e, 0xc2, 0x8d, 0x09, 0xfe, 0x98, 0x78, 0x34, 0x26, 0x2e,
	0x57, 0x12, 0x2a, 0x52, 0x42, 0x3b, 0x2b, 0xc1, 0xd6, 0x24, 0x52, 0xc6, 0x63, 0x68, 0xf9, 0xb4,
	0x4f, 0x39, 0x73, 0x2e, 0x8e, 0xde, 0x25, 0x45, 0x99, 0x98, 0xf6, 0x21, 0xa0, 0x3e, 0x3e, 0x1f,
	0xe1, 0x46, 0x5f, 0xa0, 0xaf, 0x84, 0xbf, 0x82, 0xbd, 0xdc, 0xc7, 0xe7, 0x06, 0x1d, 0xe4, 0xbc,
	0xa4, 0xa6, 0xc1, 0x38, 0x35, 0x68, 0x6a, 0x1a, 0x64, 0xa9, 0x0d, 0x5c, 0xd4, 0x53, 0x70, 0x71,
	0x1b, 0x9a, 0xda, 0x3c, 0xb2, 0x96, 0x30, 0xab, 0x21, 0xfd, 0xd1, 0x50, 0x93, 0xcf, 0xe5, 0x9c,
	0xd8, 0x26, 0x0c, 0xfc, 0xa1, 0xa3, 0x92, 0x49, 0xed, 0xc2, 0x24, 0xa0, 0x55, 0xed, 0x65, 0xb1,
	0x22, 0xf3, 0x48, 0xed, 0xc2, 0xd0, 0x36, 0x00, 0x23, 0x6e, 0x4c, 0xb8, 0xf3, 0x86, 0x0c, 0xad,
	0x25, 0xb9, 0x59, 0x4d, 0xcd, 0x7c, 0x4a, 0x86, 0xe8, 0x01, 0xac, 0x30, 0x12, 0x78, 0x4e, 0x7a,
	0x5b, 0xab, 0x25, 0x65, 0xb5, 0xc4, 0xc2, 0xcb, 0xd1, 0xce, 0x82, 0x76, 0x10, 0xfb, 0x8e, 0x7b,
	0x4a, 0xdc, 0x37, 0x8e, 0x2e, 0x45, 0xd6, 0xb2, 0x94, 0xd8, 0x1a, 0xc4, 0xfe, 0x81, 0x98, 0xef,
	0xaa, 0x69, 0xb4, 0x0b, 0xab, 0x82, 0x36, 0x8a, 0x43, 0x97, 0x30, 0x66, 0x6c, 0x62, 0xad, 0x48,
	0x6a, 0x21, 0xe6, 0x50, 0xad, 0x68, 0x9b, 0x18, 0xd9, 0x89, 0x73, 0x8f, 0x85, 0x1e, 0x28, 0x91,
	0x6d, 0x3c, 0xfa, 0x42, 0xe8, 0xf1, 0x2e, 0xac, 0x65, 0x68, 0xd9, 0xc0, 0x15, 0xa2, 0xac, 0x55,
	0x49, 0x8e, 0x52, 0xe4, 0x9f, 0xab, 0x15, 0xf4, 0xc3, 0x71, 0xe8, 0xb9, 0x26, 0x93, 0xb8, 0x33,
	0x9e, 0xc4, 0x19, 0x08, 0x7a, 0x2e, 0xeb, 0x72, 0x06, 0x87, 0xd0, 0x67, 0x93, 0x78, 0x60, 0x49,
	0x51, 0x6f, 0x4d, 0x88, 0xca, 0x22, 0x89, 0x12, 0x36, 0x06, 0x0b, 0xa8, 0x0d, 0xd5, 0x9e, 0x06,
	0x75, 0x6b, 0x4d, 0x81, 0x7c, 0x2f, 0x1f, 0xe4, 0xd7, 0xaf, 0x0e, 0xf2, 0x1b, 0x73, 0x80, 0x7c,
	0xfb, 0x27, 0xb0, 0x32, 0x61, 0x03, 0xb4, 0x0c, 0x45, 0x11, 0x3c, 0x0a, 0xb2, 0xc4, 0x4f, 0xf4,
	0x10, 0xca, 0x67, 0xd8, 0x1f, 0x10, 0x8d, 0x53, 0x1b, 0xb9, 0x18, 0xce, 0x6c, 0x45, 0xf4, 0x78,
	0xe1, 0x83, 0x42, 0x1b, 0xc3, 0x6a, 0x8e, 0x45, 0x72, 0x44, 0xbf, 0x97, 0x15, 0x7d, 0x63, 0x26,
	0xd0, 0xa6, 0xb7, 0xe8, 0xfc, 0xbe, 0x08, 0x0d, 0x4d, 0xf4, 0x2a, 0xf6, 0x48, 0x7c, 0xa9, 0x0a,
	0x7d, 0x13, 0xea, 0x22, 0x98, 0x4c, 0x0c, 0x29, 0xdc, 0x84, 0x41, 0xec, 0x9b, 0xd8, 0xd9, 0x84,
	0xaa, 0x20, 0x90, 0x01, 0xa9, 0x7a, 0xba, 0xca, 0x20, 0xf6, 0x65, 0x20, 0x4e, 0xa4, 0x6b, 0x39,
	0x27, 0x5d, 0xb3, 0x09, 0xb8, 0x78, 0xa9, 0x04, 0xac, 0xcc, 0x91, 0x80, 0xd5, 0xb9, 0x12, 0xb0,
	0x36, 0x2d, 0x01, 0x73, 0xab, 0x08, 0x4c, 0xa9, 0x22, 0xe9, 0x32, 0xd0, 0xb8, 0xb0, 0x0c, 0x74,
	0xbe, 0x59, 0x80, 0xa6, 0xde, 0xe7, 0xf3, 0x21, 0xe3, 0xa4, 0x7f, 0x29, 0xcf, 0x3c, 0x48, 0x6e,
	0x68, 0xd2, 0x2b, 0xb9, 0x4d, 0xb3, 0xb9, 0xc2, 0x3d, 0x85, 0xd5, 0x54, 0xd3, 0x9c, 0x00, 0x7d,
	0x69, 0x1a, 0xd0, 0xa3, 0x11, 0x75, 0xba, 0x8e, 0x4e, 0x36, 0xde, 0xe5, 0x29, 0x8d, 0x77, 0xa6,
	0x3f, 0x5b, 0x9c, 0xd9, 0x9f, 0x55, 0xae, 0x9e, 0xba, 0xd5, 0x79, 0x2e, 0x33, 0xff, 0x28, 0x8c,
	0xa5, 0xd8, 0x21, 0x8e, 0x71, 0x9f, 0x21, 0x0b, 0x2a, 0xa7, 0x38, 0xf0, 0x7c, 0x12, 0x6b, 0x83,
	0x9b, 0xa1, 0x80, 0x1f, 0x4e, 0xe2, 0x3e, 0x0d, 0xb0, 0xaf, 0x2d, 0x9f, 0x8c, 0xc7, 0x6f, 0x3f,
	0xc5, 0x89, 0xdb, 0xcf, 0x87, 0x50, 0x0e, 0xf9, 0x29, 0x89, 0x65, 0xcf, 0x50, 0xdf, 0xbf, 0x37,
	0xca, 0xd3, 0x49, 0x1d, 0x76, 0x5f, 0x09, 0x4a, 0x85, 0x81, 0x8a, 0xab, 0xfd, 0x01, 0xc0, 0x68,
	0x32, 0x07, 0x06, 0xd6, 0xd2, 0x30, 0x50, 0x4b, 0xa7, 0xf9, 0x1f, 0x4a, 0x49, 0x34, 0x4d, 0xe9,
	0x02, 0xf3, 0xa2, 0x69, 0x0d, 0xca, 0x27, 0x71, 0x38, 0x88, 0xcc, 0x65, 0x4d, 0x0e, 0xd0, 0x0d,
	0x00, 0x1d, 0x2c, 0x94, 0xa8, 0xf4, 0x2d, 0xdb, 0xa9, 0x99, 0x29, 0x25, 0x7d, 0x71, 0x4a, 0x49,
	0xcf, 0x6f, 0x17, 0x2a, 0x53, 0xda, 0x85, 0xf7, 0x60, 0x31, 0x92, 0xd6, 0xd1, 0x6e, 0xbe, 0x3e,
	0xcb, 0x82, 0xb6, 0xa6, 0x15, 0x67, 0xeb, 0xb9, 0x61, 0xa0, 0x13, 0x59, 0xfe, 0x46, 0x1f, 0x82,
	0x29, 0x2c, 0x0e, 0x93, 0xf9, 0x25, 0x13, 0x37, 0x0d, 0xcb, 0x99, 0xec, 0xb3, 0x9b, 0x51, 0x26,
	0x19, 0x11, 0x94, 0xf8, 0x30, 0x4a, 0x3a, 0x11, 0xf1, 0x1b, 0xdd, 0x81, 0x25, 0x1d, 0xf3, 0x4e,
	0x4c, 0x4e, 0xc8, 0x79, 0x24, 0xf3, 0xbc, 0x66, 0x37, 0xf5, 0xac, 0x2d, 0x27, 0xb3, 0x69, 0xd0,
	0x9c, 0x99, 0x06, 0x4b, 0x57, 0x4f, 0x83, 0xd6, 0x3c, 0x69, 0xf0, 0xd7, 0x02, 0xa0, 0x8c, 0x01,
	0x2f, 0x5f, 0x0b, 0x46, 0x1e, 0x29, 0xce, 0xe1, 0x91, 0x49, 0xeb, 0x97, 0xe6, 0xb1, 0xfe, 0x4d,
	0xa8, 0xcb, 0x58, 0x74, 0xb0, 0x4f, 0x31, 0xd3, 0x80, 0x03, 0x72, 0xaa, 0x2b, 0x66, 0x3a, 0xbf,
	0x59, 0x80, 0xda, 0x21, 0x1e, 0x92, 0xf8, 0x19, 0xe6, 0x58, 0x9e, 0x23, 0x4a, 0xce, 0x11, 0xa1,
	0xbb, 0xd0, 0xd2, 0x2f, 0x07, 0x4e, 0xf6, 0xa5, 0xaa, 0xa9, 0xa7, 0x0f, 0xd4, 0x83, 0xd5, 0xbb,
	0xd0, 0x30, 0x74, 0xf2, 0xdc, 0xc5, 0xbc, 0x87, 0x9a, 0xba, 0x26, 0x79, 0xa9, 0xee, 0xae, 0x25,
	0x97, 0xf2, 0xe1, 0x94, 0x27, 0x1d, 0xb1, 0x84, 0x76, 0xa0, 0xce, 0x06, 0x47, 0x1e, 0x3d, 0xa3,
	0x8c, 0x86, 0x81, 0xd6, 0x3d, 0x3d, 0x25, 0x21, 0x86, 0xf6, 0xc9, 0xaf, 0xc3, 0x80, 0xe8, 0xda,
	0x97, 0x8c, 0xe5, 0xcd, 0xf7, 0x54, 0x2c, 0x54, 0x54, 0x4a, 0xca, 0xc1, 0xe8, 0x55, 0xa5, 0x9a,
	0x7a, 0x55, 0xe9, 0xfc, 0xb6, 0x00, 0x55, 0xe9, 0xc8, 0x17, 0x84, 0xa0, 0x27, 0xb0, 0xa5, 0x72,
	0x28, 0xe3, 0x16, 0x03, 0xe4, 0xd2, 0x38, 0x05, 0x7b, 0x16, 0x09, 0xfa, 0x0e, 0x6c, 0xa8, 0x65,
	0x53, 0xad, 0x0e, 0xd2, 0x17, 0xaf, 0x82, 0x3d, 0x65, 0xb5, 0xf3, 0x97, 0x02, 0xd4, 0x8d, 0x1a,
	0x87, 0x2c, 0xfa, 0xf6, 0x34, 0x41, 0x0f, 0x61, 0x45, 0x8b, 0x65, 0x51, 0xc2, 0x52, 0x94, 0x2c,
	0x93, 0x0b, 0x9d, 0xbf, 0x15, 0x60, 0x3d, 0xd1, 0x3b, 0x13, 0x7e, 0xdf, 0xde, 0x09, 0xc6, 0x77,
	0x56, 0x0a, 0x8d, 0x9d, 0x65, 0x16, 0x49, 0xe7, 0x5f, 0x6b, 0x50, 0xce, 0xcf, 0xee, 0x3d, 0xa8,
	0x44, 0xaa, 0x13, 0xd4, 0x6d, 0xe4, 0xfa, 0x78, 0x1b, 0x29, 0xf9, 0x6c, 0x43, 0x85, 0xee, 0xc3,
	0xb2, 0xfe, 0xe9, 0x84, 0x62, 0x65, 0x54, 0xf3, 0x96, 0xa2, 0x14, 0x43, 0xcf, 0x43, 0xf7, 0xa0,
	0x65, 0x28, 0x4d, 0x0b, 0x56, 0xca, 0x10, 0x9a, 0x0e, 0x6c, 0x07, 0xea, 0x1e, 0x61, 0x6e, 0x4c,
	0x23, 0x9e, 0x4a, 0x8e, 0xd4, 0x14, 0xda, 0x87, 0x75, 0x23, 0x8a, 0x06, 0x6e, 0xd8, 0x27, 0xd9,
	0x02, 0xb3, 0xaa, 0x17, 0x7b, 0x72, 0x4d, 0x57, 0x8d, 0x1e, 0x5c, 0x1b, 0xe3, 0xb9, 0xf8, 0x01,
	0x70, 0x3d, 0x23, 0x28, 0x71, 0xc0, 0x7b, 0xb0, 0x91, 0x9c, 0x79, 0xc0, 0xd3, 0xfb, 0x57, 0xe5,
	0xfe, 0x6b, 0xe6, 0xe4, 0x6a, 0x51, 0x2b, 0xf0, 0x29, 0x58, 0xe3, 0x5c, 0x89, 0x06, 0xb5, 0x69,
	0x1a, 0x6c, 0x64, 0x45, 0x25, 0x2a, 0x7c, 0x01, 0x9b, 0x46, 0x98, 0x8f, 0x99, 0xa8, 0x35, 0xbf,
	0x1c, 0x10, 0xa6, 0x61, 0x1f, 0x2e, 0x84, 0x7d, 0x23, 0xf6, 0xc7, 0x98, 0x71, 0xdb, 0xb0, 0x76,
	0x39, 0xfa, 0x04, 0x8c, 0x33, 0x1c, 0x0d, 0xe8, 0x75, 0xd9, 0xa4, 0xdc, 0x4a, 0x34, 0x93, 0xde,
	0x1c, 0x5d, 0x29, 0x04, 0x8d, 0x6a, 0x4f, 0x9a, 0x51, 0x7a, 0x0e, 0xfd, 0x3f, 0x40, 0x24, 0xb0,
	0xd7, 0xf1, 0x30, 0xc7, 0xba, 0xd7, 0x45, 0x69, 0x60, 0x57, 0xb0, 0x6c, 0xd7, 0xa2, 0x04, 0xa1,
	0x9f, 0x8e, 0xea, 0x81, 0xba, 0x23, 0xea, 0xc7, 0xc6, 0xad, 0xfc, 0x6a, 0xa2, 0x02, 0xb1, 0x99,
	0xb9, 0x19, 0xa2, 0xef, 0x43, 0x3b, 0x2b, 0xc3, 0x31, 0x8d, 0x99, 0x08, 0x4c, 0x75, 0x8b, 0xbf,
	0x96, 0x61, 0x79, 0xad, 0xd7, 0x7b, 0x1e, 0x7a, 0x1f, 0xae, 0x8d, 0x31, 0x27, 0x21, 0xdd, 0x92,
	0x9c, 0x6b, 0xd1, 0x84, 0x02, 0x3d, 0x0f, 0x75, 0x61, 0x7b, 0x9c, 0x2d, 0x1b, 0x15, 0xcb, 0x32,
	0x2a, 0xda, 0x59, 0xe6, 0x4c, 0x6c, 0xfc, 0x14, 0x6e, 0x4e, 0x11, 0x91, 0x84, 0xc8, 0xca, 0xb4,
	0x10, 0xb9, 0x9e, 0x27, 0x37, 0x09, 0x94, 0x8f, 0xe1, 0xfa, 0x98, 0xe4, 0x6c, 0xc6, 0x20, 0xa9,
	0xdb, 0x66, 0x46, 0x46, 0x26, 0x6f, 0xbe, 0x84, 0x1b, 0xf9, 0x02, 0x12, 0xcd, 0x56, 0xa7, 0x69,
	0xb6, 0x95, 0x23, 0x35, 0x51, 0xec, 0x13, 0xb8, 0x35, 0x5b, 0xae, 0x83, 0x1f, 0xc9, 0xbb, 0x7d,
	0xcd, 0xde, 0x9e, 0x21, 0xa7, 0xfb, 0x08, 0xfd, 0x62, 0x42, 0x43, 0xe5, 0x36, 0xd7, 0x0f, 0xd9,
	0x65, 0x1f, 0x01, 0xda, 0x93, 0x9e, 0x3d, 0x90, 0xec, 0x5d, 0x9e, 0x7a, 0x94, 0xdf, 0x98, 0xf1,
	0x28, 0x7f, 0xed, 0xea, 0x6d, 0x9a, 0x35, 0xcf, 0x6b, 0xf2, 0x5d, 0x68, 0x51, 0xe6, 0x7c, 0xcd,
	0xc2, 0xc0, 0x24, 0xbd, 0xb5, 0x29, 0xfb, 0xc7, 0x26, 0x65, 0x3f, 0x62, 0x61, 0xa0, 0xd3, 0x59,
	0xd8, 0x57, 0xb9, 0xd8, 0x11, 0x7d, 0x38, 0x8b, 0x9c, 0xbc, 0x7b, 0x5e, 0x5b, 0x7a, 0x7f, 0x5b,
	0x11, 0xf6, 0x82, 0x43, 0x16, 0x75, 0x27, 0xef, 0x77, 0x36, 0xdc, 0x1d, 0x49, 0x32, 0x77, 0xd3,
	0x5c, 0x71, 0x5b, 0x52, 0x5c, 0xc7, 0x88, 0x33, 0x95, 0x2b, 0x47, 0xe6, 0x6b, 0xb8, 0xa7, 0x65,
	0x86, 0x03, 0x3e, 0x5b, 0xe8, 0x75, 0x29, 0xf4, 0xb6, 0x22, 0x7f, 0x35, 0xe0, 0x33, 0xa4, 0x7e,
	0x05, 0x0f, 0x53, 0x67, 0xce, 0xf4, 0x96, 0xb9, 0xa2, 0xb7, 0xa5, 0xe8, 0x7b, 0xc9, 0xf1, 0xd3,
	0xc5, 0x32, 0x47, 0xfc, 0x64, 0x2e, 0x29, 0x88, 0x33, 0xe5, 0xec, 0x86, 0x8c, 0xd6, 0x6c, 0x2e,
	0x49, 0xa4, 0x33, 0x95, 0x8d, 0xc0, 0xe6, 0x38, 0x3a, 0x9d, 0x07, 0x06, 0x69, 0x6f, 0x4a, 0xa4,
	0x7d, 0x30, 0x8e, 0xb4, 0x19, 0xac, 0x3a, 0x0f, 0xd2, 0x90, 0xbb, 0x11, 0xe5, 0x2e, 0x4e, 0x7e,
	0x30, 0xd8, 0x19, 0x2b, 0xe5, 0xd3, 0x3f, 0x18, 0xa0, 0xd7, 0x80, 0x8c, 0x8a, 0x22, 0xbc, 0x28,
	0xa3, 0x9c, 0x30, 0xeb, 0x96, 0xd4, 0xed, 0x4e, 0xbe, 0x6e, 0x76, 0x42, 0xa7, 0xd4, 0x5a, 0x89,
	0xc6, 0xe7, 0xd1, 0x63, 0x58, 0x12, 0x21, 0x78, 0x4c, 0x12, 0xdc, 0xe9, 0x48, 0x95, 0xd6, 0xb2,
	0x12, 0x55, 0x73, 0x68, 0x37, 0x22, 0x16, 0xbd, 0x20, 0x06, 0x80, 0x3e, 0x06, 0x64, 0x6a, 0x52,
	0x8a, 0xff, 0xf6, 0x18, 0xe8, 0x18, 0x7e, 0xdb, 0xb4, 0x23, 0x23, 0x01, 0x4f, 0x60, 0x95, 0x87,
	0xda, 0x55, 0x29, 0x09, 0x6f, 0x4d, 0x95, 0xc0, 0x43, 0xe9, 0xb5, 0x91, 0x84, 0x6d, 0x80, 0x33,
	0x9c, 0xdc, 0x4b, 0xef, 0xc8, 0xa8, 0xa9, 0x9d, 0x61, 0x73, 0x21, 0xfd, 0xd9, 0xc8, 0xad, 0x3a,
	0xd8, 0x52, 0xdb, 0xdc, 0x1d, 0x7b, 0x8d, 0xcb, 0xed, 0x26, 0x13, 0x57, 0xaa, 0x61, 0xb2, 0x73,
	0xfb, 0x09, 0xa0, 0xc9, 0x5a, 0x3b, 0xcf, 0xad, 0xbf, 0xdd, 0x83, 0xad, 0x19, 0x31, 0x34, 0x97,
	0xa8, 0x67, 0xb0, 0x91, 0xef, 0xf2, 0xb9, 0x9e, 0x21, 0xbe, 0x29, 0x40, 0x23, 0x29, 0x11, 0x98,
	0xa7, 0xbf, 0x07, 0x36, 0x64, 0x0f, 0x7a, 0x1b, 0x9a, 0x49, 0x0d, 0x38, 0x8e, 0xc3, 0xbe, 0x14,
	0x51, 0xb6, 0x93, 0x0f, 0x82, 0x2f, 0xe2, 0x50, 0xde, 0xfe, 0x12, 0x22, 0x1e, 0xea, 0xef, 0x83,
	0xe6, 0x05, 0x62, 0xf8, 0x3a, 0x14, 0xf7, 0xd4, 0x18, 0x73, 0xf3, 0x75, 0x50, 0xfe, 0x46, 0xbb,
	0x50, 0x12, 0x30, 0xaa, 0xbf, 0xc0, 0xcc, 0x02, 0x5c, 0x49, 0xf7, 0x1f, 0x7c, 0x2f, 0xec, 0xfc,
	0xb9, 0x08, 0x30, 0xfa, 0xca, 0x3b, 0xd1, 0x67, 0x3f, 0x80, 0x95, 0xf1, 0xea, 0x67, 0xbe, 0x94,
	0xb7, 0xb2, 0xd5, 0xce, 0x13, 0xd1, 0x97, 0x74, 0xae, 0xa6, 0xb9, 0xae, 0x99, 0xce, 0xd4, 0x43,
	0x8f, 0x27, 0x40, 0x65, 0xf4, 0x05, 0x5a, 0x9f, 0x3e, 0xdb, 0xf1, 0xa4, 0xd4, 0xba, 0xa3, 0xf2,
	0x32, 0xc5, 0x50, 0x96, 0x0c, 0xcd, 0x88, 0x45, 0x29, 0xb2, 0xef, 0x82, 0xc5, 0x43, 0x8e, 0xfd,
	0x9c, 0x6f, 0xdb, 0xba, 0xe5, 0x5e, 0x97, 0xeb, 0xe3, 0x9f, 0xb5, 0x85, 0x01, 0x19, 0xc7, 0x31,
	0x77, 0xa4, 0xd9, 0x2f, 0xf1, 0xa0, 0x27, 0xa9, 0x9f, 0x4d, 0xda, 0xbe, 0x7a, 0xf5, 0xea, 0x5a,
	0x9b, 0xf3, 0xff, 0x39, 0x8a, 0x5f, 0x62, 0x9e, 0xe3, 0xaf, 0xe4, 0x1f, 0x11, 0x16, 0x2e, 0xfa,
	0x47, 0x84, 0xff, 0x83, 0xe5, 0xd4, 0x4d, 0x5e, 0xbe, 0x2e, 0x68, 0xaf, 0xb5, 0x52, 0xf3, 0x07,
	0xa1, 0x47, 0x44, 0xde, 0x9c, 0x61, 0xae, 0xbd, 0x24, 0x7e, 0x7e, 0x3b, 0xc7, 0x7e, 0xfa, 0x83,
	0x9f, 0x3f, 0x3e, 0xa1, 0xfc, 0x74, 0x70, 0xb4, 0xeb, 0x86, 0xfd, 0x3d, 0xf3, 0x5c, 0xfd, 0xea,
	0xe5, 0xf3, 0xbd, 0x08, 0x0f, 0xc3, 0x80, 0xbc, 0x13, 0x93, 0x28, 0x64, 0x94, 0x87, 0xf1, 0x70,
	0x2f, 0x7a, 0x73, 0xa2, 0xfe, 0x8d, 0xc8, 0xfc, 0xaf, 0xd1, 0xd1, 0xa2, 0x1c, 0x3e, 0xfa, 0x77,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x01, 0x13, 0xab, 0x98, 0x85, 0x24, 0x00, 0x00,
}
