// Code generated by protoc-gen-go. DO NOT EDIT.
// source: order.proto

package order

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Order struct {
	Id                        string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OrderId                   string            `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	ProjectOutcomeAmount      float64           `protobuf:"fixed64,3,opt,name=project_outcome_amount,json=projectOutcomeAmount,proto3" json:"project_outcome_amount,omitempty"`
	ProjectOutcomeCurrency    string            `protobuf:"bytes,4,opt,name=project_outcome_currency,json=projectOutcomeCurrency,proto3" json:"project_outcome_currency,omitempty"`
	ProjectParams             map[string]string `protobuf:"bytes,5,rep,name=project_params,json=projectParams,proto3" json:"project_params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PaymentMethod             *PaymentMethod    `protobuf:"bytes,6,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	PaymentMethodPayerAccount string            `protobuf:"bytes,7,opt,name=PaymentMethodPayerAccount,proto3" json:"PaymentMethodPayerAccount,omitempty"`
	Payment_MethodTxnParams   map[string]string `protobuf:"bytes,8,rep,name=payment_Method_txn_params,json=paymentMethodTxnParams,proto3" json:"payment_Method_txn_params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral      struct{}          `json:"-"`
	XXX_unrecognized          []byte            `json:"-"`
	XXX_sizecache             int32             `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_order_cf940461754c0650, []int{0}
}
func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (dst *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(dst, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Order) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *Order) GetProjectOutcomeAmount() float64 {
	if m != nil {
		return m.ProjectOutcomeAmount
	}
	return 0
}

func (m *Order) GetProjectOutcomeCurrency() string {
	if m != nil {
		return m.ProjectOutcomeCurrency
	}
	return ""
}

func (m *Order) GetProjectParams() map[string]string {
	if m != nil {
		return m.ProjectParams
	}
	return nil
}

func (m *Order) GetPaymentMethod() *PaymentMethod {
	if m != nil {
		return m.PaymentMethod
	}
	return nil
}

func (m *Order) GetPaymentMethodPayerAccount() string {
	if m != nil {
		return m.PaymentMethodPayerAccount
	}
	return ""
}

func (m *Order) GetPayment_MethodTxnParams() map[string]string {
	if m != nil {
		return m.Payment_MethodTxnParams
	}
	return nil
}

func init() {
	proto.RegisterType((*Order)(nil), "Order")
	proto.RegisterMapType((map[string]string)(nil), "Order.PaymentMethodTxnParamsEntry")
	proto.RegisterMapType((map[string]string)(nil), "Order.ProjectParamsEntry")
}

func init() { proto.RegisterFile("order.proto", fileDescriptor_order_cf940461754c0650) }

var fileDescriptor_order_cf940461754c0650 = []byte{
	// 320 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x49, 0xfa, 0xd7, 0x29, 0x0d, 0xb2, 0x94, 0xb2, 0xa9, 0x97, 0xd0, 0x53, 0x4e, 0x39,
	0x54, 0x85, 0x22, 0x1e, 0x5a, 0xc4, 0x43, 0x0f, 0xd2, 0x10, 0xbc, 0x4a, 0x88, 0xd9, 0x05, 0xab,
	0x66, 0x77, 0x59, 0x37, 0xd2, 0x7c, 0x40, 0xbf, 0x97, 0x74, 0x36, 0x81, 0xd4, 0x7f, 0xe0, 0x2d,
	0xf3, 0x7e, 0xfb, 0x66, 0xe6, 0x31, 0x81, 0x91, 0xd4, 0x8c, 0xeb, 0x48, 0x69, 0x69, 0xe4, 0x6c,
	0xa2, 0xb2, 0xaa, 0xe0, 0xc2, 0xa4, 0x05, 0x37, 0x4f, 0x92, 0x59, 0x75, 0xfe, 0xd1, 0x85, 0xde,
	0xf6, 0xf0, 0x8a, 0x78, 0xe0, 0xee, 0x18, 0x75, 0x02, 0x27, 0x3c, 0x49, 0xdc, 0x1d, 0x23, 0x3e,
	0x0c, 0xd1, 0x9e, 0xee, 0x18, 0x75, 0x51, 0x1d, 0x60, 0xbd, 0x61, 0xe4, 0x02, 0xa6, 0x4a, 0xcb,
	0x67, 0x9e, 0x9b, 0x54, 0x96, 0x26, 0x97, 0x05, 0x4f, 0xb3, 0x42, 0x96, 0xc2, 0xd0, 0x4e, 0xe0,
	0x84, 0x4e, 0x32, 0xa9, 0xe9, 0xd6, 0xc2, 0x35, 0x32, 0xb2, 0x04, 0xfa, 0xd5, 0x95, 0x97, 0x5a,
	0x73, 0x91, 0x57, 0xb4, 0x8b, 0x03, 0xa6, 0xc7, 0xbe, 0x9b, 0x9a, 0x92, 0x15, 0x78, 0x8d, 0x53,
	0x65, 0x3a, 0x2b, 0xde, 0x68, 0x2f, 0xe8, 0x84, 0xa3, 0x85, 0x1f, 0xe1, 0xea, 0x51, 0x6c, 0x61,
	0x8c, 0xec, 0x56, 0x18, 0x5d, 0x25, 0x63, 0xd5, 0xd6, 0xc8, 0x25, 0x78, 0xc7, 0xf1, 0x69, 0x3f,
	0x70, 0xc2, 0xd1, 0xc2, 0x8b, 0x62, 0x2b, 0xdf, 0xa1, 0x9a, 0x8c, 0x55, 0xbb, 0x24, 0xd7, 0xe0,
	0x1f, 0xf1, 0x38, 0xab, 0xb8, 0x5e, 0xe7, 0x39, 0x66, 0x1d, 0xe0, 0xce, 0xbf, 0x3f, 0x20, 0x0f,
	0xe0, 0x37, 0x43, 0x2d, 0x4d, 0xcd, 0x5e, 0x34, 0x09, 0x86, 0x98, 0x60, 0xde, 0x24, 0x68, 0x37,
	0xb9, 0xdf, 0x8b, 0x76, 0x94, 0xa9, 0xfa, 0x11, 0xce, 0x56, 0x40, 0xbe, 0x07, 0x27, 0xa7, 0xd0,
	0x79, 0xe1, 0x55, 0x7d, 0xc7, 0xc3, 0x27, 0x99, 0x40, 0xef, 0x3d, 0x7b, 0x2d, 0x79, 0x7d, 0x45,
	0x5b, 0x5c, 0xb9, 0x4b, 0x67, 0xb6, 0x81, 0xb3, 0x3f, 0x06, 0xff, 0xa7, 0xd5, 0x63, 0x1f, 0x7f,
	0xa7, 0xf3, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9f, 0xa5, 0xb7, 0xf8, 0x73, 0x02, 0x00, 0x00,
}
