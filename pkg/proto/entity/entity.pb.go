// Code generated by protoc-gen-go. DO NOT EDIT.
// source: entity/entity.proto

package entity // import "github.com/paysuper/paysuper-recurring-repository/pkg/proto/entity"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SavedCard struct {
	// @inject_tag: json:"id"
	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Token      string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	ProjectId  string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	MerchantId string `protobuf:"bytes,4,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	// @inject_tag: json:"pan"
	MaskedPan string `protobuf:"bytes,5,opt,name=masked_pan,json=maskedPan,proto3" json:"pan"`
	// @inject_tag: json:"expire"
	Expire               *CardExpire          `protobuf:"bytes,6,opt,name=expire,proto3" json:"expire"`
	RecurringId          string               `protobuf:"bytes,7,opt,name=recurring_id,json=recurringId,proto3" json:"recurring_id,omitempty"`
	IsActive             bool                 `protobuf:"varint,8,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-" bson:"-" structure:"-"`
	XXX_unrecognized     []byte               `json:"-" bson:"-" structure:"-"`
	XXX_sizecache        int32                `json:"-" bson:"-" structure:"-"`
}

func (m *SavedCard) Reset()         { *m = SavedCard{} }
func (m *SavedCard) String() string { return proto.CompactTextString(m) }
func (*SavedCard) ProtoMessage()    {}
func (*SavedCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_entity_2b4a03e60ad02138, []int{0}
}
func (m *SavedCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SavedCard.Unmarshal(m, b)
}
func (m *SavedCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SavedCard.Marshal(b, m, deterministic)
}
func (dst *SavedCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SavedCard.Merge(dst, src)
}
func (m *SavedCard) XXX_Size() int {
	return xxx_messageInfo_SavedCard.Size(m)
}
func (m *SavedCard) XXX_DiscardUnknown() {
	xxx_messageInfo_SavedCard.DiscardUnknown(m)
}

var xxx_messageInfo_SavedCard proto.InternalMessageInfo

func (m *SavedCard) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SavedCard) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *SavedCard) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *SavedCard) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *SavedCard) GetMaskedPan() string {
	if m != nil {
		return m.MaskedPan
	}
	return ""
}

func (m *SavedCard) GetExpire() *CardExpire {
	if m != nil {
		return m.Expire
	}
	return nil
}

func (m *SavedCard) GetRecurringId() string {
	if m != nil {
		return m.RecurringId
	}
	return ""
}

func (m *SavedCard) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *SavedCard) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *SavedCard) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type CardExpire struct {
	// @inject_tag: json:"month"
	Month string `protobuf:"bytes,1,opt,name=month,proto3" json:"month"`
	// @inject_tag: json:"year"
	Year                 string   `protobuf:"bytes,2,opt,name=year,proto3" json:"year"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-" structure:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-" structure:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-" structure:"-"`
}

func (m *CardExpire) Reset()         { *m = CardExpire{} }
func (m *CardExpire) String() string { return proto.CompactTextString(m) }
func (*CardExpire) ProtoMessage()    {}
func (*CardExpire) Descriptor() ([]byte, []int) {
	return fileDescriptor_entity_2b4a03e60ad02138, []int{1}
}
func (m *CardExpire) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardExpire.Unmarshal(m, b)
}
func (m *CardExpire) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardExpire.Marshal(b, m, deterministic)
}
func (dst *CardExpire) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardExpire.Merge(dst, src)
}
func (m *CardExpire) XXX_Size() int {
	return xxx_messageInfo_CardExpire.Size(m)
}
func (m *CardExpire) XXX_DiscardUnknown() {
	xxx_messageInfo_CardExpire.DiscardUnknown(m)
}

var xxx_messageInfo_CardExpire proto.InternalMessageInfo

func (m *CardExpire) GetMonth() string {
	if m != nil {
		return m.Month
	}
	return ""
}

func (m *CardExpire) GetYear() string {
	if m != nil {
		return m.Year
	}
	return ""
}

func init() {
	proto.RegisterType((*SavedCard)(nil), "entity.SavedCard")
	proto.RegisterType((*CardExpire)(nil), "entity.CardExpire")
}

func init() { proto.RegisterFile("entity/entity.proto", fileDescriptor_entity_2b4a03e60ad02138) }

var fileDescriptor_entity_2b4a03e60ad02138 = []byte{
	// 354 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xcf, 0x4f, 0xbb, 0x30,
	0x14, 0x0f, 0x7c, 0x37, 0xbe, 0xe3, 0xcd, 0x78, 0xa8, 0x1e, 0xc8, 0x8c, 0xd9, 0xdc, 0x69, 0x31,
	0x19, 0x24, 0x9a, 0x98, 0x78, 0xdc, 0xd4, 0xc3, 0x6e, 0x06, 0x3d, 0x79, 0x21, 0x1d, 0x7d, 0xb2,
	0x3a, 0xa1, 0x4d, 0x29, 0x8b, 0xfc, 0xdb, 0xfe, 0x05, 0x86, 0xb6, 0xcc, 0xa3, 0x27, 0xfa, 0xf9,
	0xc5, 0xe3, 0x7d, 0x28, 0x9c, 0x61, 0xa5, 0xb9, 0x6e, 0x13, 0xfb, 0x88, 0xa5, 0x12, 0x5a, 0x90,
	0xc0, 0xa2, 0xc9, 0xb4, 0x10, 0xa2, 0xf8, 0xc4, 0xc4, 0xb0, 0xdb, 0xe6, 0x3d, 0xd1, 0xbc, 0xc4,
	0x5a, 0xd3, 0x52, 0x5a, 0xe3, 0xfc, 0xdb, 0x87, 0xf0, 0x85, 0x1e, 0x90, 0x3d, 0x50, 0xc5, 0xc8,
	0x29, 0xf8, 0x9c, 0x45, 0xde, 0xcc, 0x5b, 0x84, 0xa9, 0xcf, 0x19, 0x39, 0x87, 0xa1, 0x16, 0x7b,
	0xac, 0x22, 0xdf, 0x50, 0x16, 0x90, 0x4b, 0x00, 0xa9, 0xc4, 0x07, 0xe6, 0x3a, 0xe3, 0x2c, 0xfa,
	0x67, 0xa4, 0xd0, 0x31, 0x1b, 0x46, 0xa6, 0x30, 0x2e, 0x51, 0xe5, 0x3b, 0x5a, 0x19, 0x7d, 0x60,
	0x74, 0xe8, 0xa9, 0x0d, 0xeb, 0xf2, 0x25, 0xad, 0xf7, 0xc8, 0x32, 0x49, 0xab, 0x68, 0x68, 0xf3,
	0x96, 0x79, 0xa6, 0x15, 0xb9, 0x86, 0x00, 0xbf, 0x24, 0x57, 0x18, 0x05, 0x33, 0x6f, 0x31, 0xbe,
	0x21, 0xb1, 0x5b, 0xad, 0xfb, 0xc4, 0x27, 0xa3, 0xa4, 0xce, 0x41, 0xae, 0xe0, 0x44, 0x61, 0xde,
	0x28, 0xc5, 0xab, 0xa2, 0x1b, 0xf6, 0xdf, 0xbc, 0x6c, 0x7c, 0xe4, 0x36, 0x8c, 0x5c, 0x40, 0xc8,
	0xeb, 0x8c, 0xe6, 0x9a, 0x1f, 0x30, 0x1a, 0xcd, 0xbc, 0xc5, 0x28, 0x1d, 0xf1, 0x7a, 0x65, 0x30,
	0xb9, 0x07, 0xc8, 0x15, 0x52, 0x8d, 0x2c, 0xa3, 0x3a, 0x0a, 0xcd, 0xbc, 0x49, 0x6c, 0x4b, 0x8b,
	0xfb, 0xd2, 0xe2, 0xd7, 0xbe, 0xb4, 0x34, 0x74, 0xee, 0x95, 0xee, 0xa2, 0x8d, 0x64, 0x7d, 0x14,
	0xfe, 0x8e, 0x3a, 0xf7, 0x4a, 0xcf, 0xef, 0x00, 0x7e, 0x77, 0xe9, 0x4a, 0x2e, 0x45, 0xa5, 0x77,
	0xae, 0x77, 0x0b, 0x08, 0x81, 0x41, 0x8b, 0x54, 0xb9, 0xe6, 0xcd, 0x79, 0xfd, 0xf8, 0xb6, 0x2e,
	0xb8, 0xde, 0x35, 0xdb, 0x38, 0x17, 0x65, 0x22, 0x69, 0x5b, 0x37, 0x12, 0xd5, 0xf1, 0xb0, 0x3c,
	0xae, 0xbd, 0x54, 0x28, 0x45, 0xcd, 0xb5, 0x50, 0x6d, 0x22, 0xf7, 0x85, 0xfd, 0xfd, 0xee, 0x86,
	0x6c, 0x03, 0x83, 0x6e, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xc9, 0x2a, 0x26, 0xd8, 0x39, 0x02,
	0x00, 0x00,
}
